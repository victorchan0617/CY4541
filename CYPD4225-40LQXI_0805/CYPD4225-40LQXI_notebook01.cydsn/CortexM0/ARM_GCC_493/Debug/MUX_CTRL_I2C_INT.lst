ARM GAS  C:\Users\victo\AppData\Local\Temp\ccVe2IoV.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 4
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"MUX_CTRL_I2C_INT.c"
  14              		.text
  15              	.Ltext0:
  16              		.section	.gnu.lto_.profile.91bc8410,"",%progbits
  17 0000 789C6366 		.ascii	"x\234cf```c\200\000F\206\357\214\257\030\001\006V\001"
  17      60606063 
  17      80004686 
  17      EF8CAF18 
  17      01065601 
  18 0014 EE       		.ascii	"\356"
  19              		.text
  20              		.section	.gnu.lto_.jmpfuncs.91bc8410,"",%progbits
  21 0000 789C6366 		.ascii	"x\234cf\300\0168\2414#\210\250\007b\000\003B\000\215"
  21      C00E38A1 
  21      342388A8 
  21      07620003 
  21      42008D
  22              		.text
  23              		.section	.gnu.lto_.inline.91bc8410,"",%progbits
  24 0000 789C6366 		.ascii	"x\234cf\300\016d\2414#\003\303\033F;F\006\2463\314\177"
  24      C00E64A1 
  24      342303C3 
  24      1B463B46 
  24      06A633CC 
  25 0015 BAD918D8 		.ascii	"\272\331\030\330\026\3103\201\204\231\371A$\000Y;\004"
  25      16C83381 
  25      8499F941 
  25      2400593B 
  25      04
  26 0026 85       		.ascii	"\205"
  27              		.text
  28              		.section	.gnu.lto_.pureconst.91bc8410,"",%progbits
  29 0000 789C6366 		.ascii	"x\234cf```f\200\000F\006)\000\000z\000\""
  29      60606066 
  29      80004606 
  29      2900007A 
  29      0022
  30              		.text
  31              		.section	.gnu.lto_MUX_CTRL_I2C_ISR.91bc8410,"",%progbits
  32 0000 789C9D5A 		.ascii	"x\234\235ZyXTG\266\277U\267\233n\350\006\334\027\214"
  32      79585447 
  32      B6BF55B7 
  32      9B6EE806 
  32      DC178C
  33 0013 88A2E2BE 		.ascii	"\210\242\342\276\357k&\313$N631\223\231|N\214c\364K"
ARM GAS  C:\Users\victo\AppData\Local\Temp\ccVe2IoV.s 			page 2


  33      EF6B26CB 
  33      244E3633 
  33      3193997C 
  33      4E8C63F4 
  34 0028 E69B68C6 		.ascii	"\346\233h\306\304/o\362\306\227f\021\020E\020q\005\025"
  34      C42F6FF2 
  34      C6976611 
  34      10451071 
  34      0515
  35 003a A2204463 		.ascii	"\242 Dc\004\342B\\hwM\020\\q\303]p\211\013D\004\227"
  35      04E2425C 
  35      68774D10 
  35      5C71C35D 
  35      70890B44 
  36 0050 00AFCEA9 		.ascii	"\000\257\316\251\272\325\227kCZ\375\343x\253\352\324"
  36      BAD5976B 
  36      435AFDE3 
  36      78ABEAD4 
  37 0060 AF4E9DAD 		.ascii	"\257N\235\255NU\243*O\376{UU\224?\364R\224\227\3307"
  37      4E55A32A 
  37      4FFE7B55 
  37      55943FF4 
  37      529497D8 
  38 0075 F9834268 		.ascii	"\371\203Bh|\201\242\204Z)U\367\017R\034>\246\203-\025"
  38      7C81A284 
  38      5A2955F7 
  38      0F521C3E 
  38      A6832D15 
  39 0089 875D2526 		.ascii	"\207]%&\336m\242\346\350\020\326\355\005\324n&^\274"
  39      DE6DA2E6 
  39      E810D6ED 
  39      05D46E26 
  39      5EBC
  40 009b DB8B5AB0 		.ascii	"\333\213Z\260\333\037\273-\324\212-olY\2117g\362\246"
  40      DB1FBB2D 
  40      D48A2D6F 
  40      6C598937 
  40      67F2A6
  41 00ae 3ED86DC3 		.ascii	">\330m\303n\037b\343\3356j\327\315\265S?l\371b\313\227"
  41      6E1F62E3 
  41      DD366AD7 
  41      CDB5533F 
  41      6CF962CB 
  42 00c3 F871263F 		.ascii	"\370q&?\342\317?\374i#\034\037\211\343\215hcl5\303V"
  42      E2CF3FFC 
  42      69231C1F 
  42      89E38D68 
  42      636C35C3 
  43 00d8 63DA745B 		.ascii	"c\332t[ k59\336\233\265\232\220\246|JS2\232\1774\243"
  43      206B3539 
  43      DE9BB59A 
  43      90A67C4A 
  43      53329A7F 
  44 00ee CD91BB0D 		.ascii	"\315\221\273\015r7\247-\260\325\022[-H\033\316\324\222"
  44      7237A72D 
  44      B0D5125B 
  44      2D481BCE 
ARM GAS  C:\Users\victo\AppData\Local\Temp\ccVe2IoV.s 			page 3


  44      D492
  45 0100 B6C2EED6 		.ascii	"\266\302\356\326\330\335J\353nM\003ts\003\264\3566\364"
  45      D8DD4AEB 
  45      6E4D0374 
  45      7303B4EE 
  45      36F4
  46 0112 39EC1E88 		.ascii	"9\354\036\210\335\317\321\266\330\352\202\255\2664\020"
  46      DDCFD1B6 
  46      D8EA82AD 
  46      B63410
  47 0121 5B1DB115 		.ascii	"[\035\261\025H\333c\253\035\266\332\321 la\237=\210"
  47      48DB63AB 
  47      1DB6DAD1 
  47      206C619F 
  47      3D88
  48 0133 B4E770ED 		.ascii	"\264\347p\355I0|\220\016\374\377\235\326`\332a\356~"
  48      49307C90 
  48      0EFCFF9D 
  48      D660DA61 
  48      EE7E
  49 0145 85318644 		.ascii	"\2051\206DX\030cG\332\011\247\205\340\264N\264\263\256"
  49      58186347 
  49      DA09A785 
  49      E0B44EB4 
  49      B3AE
  50 0157 D5998470 		.ascii	"\325\231\204p\220\0202\220\177t\241]q\274\007\216w\245"
  50      90103290 
  50      7F74A15D 
  50      71BC078E 
  50      77A5
  51 0169 DDB1D50D 		.ascii	"\335\261\325\015[\335Hw\316\324]\343\356A\373\342x\177"
  51      5BDD4877 
  51      CED45DE3 
  51      EE41FBE2 
  51      787F
  52 017b 1CEF4B9E 		.ascii	"\034\357K\236GIz\322^\005?\201\000\375v\251\254\273"
  52      47497AD2 
  52      5E053F81 
  52      00FD76A9 
  52      ACBB
  53 018d 17ED5DD6 		.ascii	"\027\355]\326\234\265\372\244\014a\255\336\244\017\237"
  53      9CB5FAA4 
  53      0C61ADDE 
  53      A40F9F
  54 019c DB8773EF 		.ascii	"\333\207s\357\264:\025\332S\317\337OC\357O\007\350\024"
  54      B43A15DA 
  54      53CFDF4F 
  54      43EF4F07 
  54      E814
  55 01ae 3540EB1E 		.ascii	"5@\353\036H\007\201\261|F\203\341\354\203\350`d\032"
  55      480781B1 
  55      7C4683E1 
  55      EC83E860 
  55      641A
  56 01c0 864C83E9 		.ascii	"\206L\203\351P4\347\0204\347\0202\224O\031\252\231s"
  56      5034E710 
  56      34E71032 
ARM GAS  C:\Users\victo\AppData\Local\Temp\ccVe2IoV.s 			page 4


  56      944F19AA 
  56      9973
  57 01d2 181D81E3 		.ascii	"\030\035\201\343\303q|8\031\301\273Gh\343#)\242\372"
  57      C3717C38 
  57      19C1BB47 
  57      68E32329 
  57      A2FA
  58 01e4 8CC2F151 		.ascii	"\214\302\361QZ\367hB\340C!\312\327T5\231\275,Vo\037"
  58      5AF76842 
  58      E04321CA 
  58      D7543599 
  58      BD2C566F 
  59 01f9 9BDDD7CF 		.ascii	"\233\335\327\317\277Q\343&M\2335o\321\262U\353\2006"
  59      BF51E326 
  59      4D9B356F 
  59      D1B255EB 
  59      8036
  60 020b CFB50D6C 		.ascii	"\317\265\015l\027\324\276Cp\307N\235C\272t\355\326\275"
  60      17D4BE43 
  60      70C74E9D 
  60      43BA74ED 
  60      D6BD
  61 021d 47DF9EBD 		.ascii	"G\337\236\275z\367q*\375\372\017\0308h\360\220\241\303"
  61      7AF7712A 
  61      FDFA0F18 
  61      3868F090 
  61      A1C3
  62 022f 868F1839 		.ascii	"\206\217\0309j4\371Zu\2120\012VH-\373\347\217\215\033"
  62      6A34F95A 
  62      758A300A 
  62      56482DFB 
  62      E78F8D1B 
  63 0243 B49C9278 		.ascii	"\264\234\222x\347\332%\266\2204\207\303Qv4\3231\326"
  63      E7DA25B6 
  63      903487C3 
  63      517634D3 
  63      31D6
  64 0255 491E5245 		.ascii	"I\036RE\271G9;YCB\024\306\224\237p\350\201\217\332\233"
  64      B947393B 
  64      59434214 
  64      C6949F70 
  64      E8818FDA 
  65 026a C077EEFA 		.ascii	"\300w\356\372\212C\266\353\364!%A\320\3741\341\300\022"
  65      8A43B6EB 
  65      F4212541 
  65      D0FC31E1 
  65      C012
  66 027c 2F685213 		.ascii	"/hR\0234\213\216\346\314\366\013Nu8\302.\026n\371\310"
  66      348B8EE6 
  66      CCF60B4E 
  66      7538C22E 
  66      166EF9C8 
  67 0290 1991E2A8 		.ascii	"\031\221\342\250\251\255e\230*\311 *\203%\231$\200|"
  67      A9AD6598 
  67      2AC9202A 
  67      83259924 
  67      807C
ARM GAS  C:\Users\victo\AppData\Local\Temp\ccVe2IoV.s 			page 5


  68 02a2 4B02843C 		.ascii	"K\002\204<lFXBl\230\227:\024\261\347\237[\266\222\340"
  68      6C465842 
  68      6C98973A 
  68      14B1E79F 
  68      5BB692E0 
  69 02b6 EC9453D9 		.ascii	"\354\224S\331\216\347u\263\327\3253\273<\242\372\244"
  69      8EE775B3 
  69      D7D533BB 
  69      3CA2FAA4 
  70 02c6 CD2B8289 		.ascii	"\315+\202\211\337\210\254%\301\344;\022\314\245'\353"
  70      DF88AC25 
  70      C1E43B12 
  70      CCA527EB 
  71 02d6 89175114 		.ascii	"\211\027Q\024\252\365~\337\304\351\250\255\315Y\263"
  71      AAF57EDF 
  71      C4E9A8AD 
  71      CD59B3
  72 02e5 F3E820B2 		.ascii	"\363\350 \262\227\020\005\372\031 \033Q\221\232\220"
  72      971005FA 
  72      19201B51 
  72      919A90
  73 02f4 9A917A21 		.ascii	"\232\221z!\265 \265\"\365V\036R\223\017\020\033#f;|"
  73      B520B522 
  73      F5561E52 
  73      930F101B 
  73      23663B7C 
  74 0308 F9C2571B 		.ascii	"\371\302W\033F\274\332\302W \220 F,\355\201t\200f0\220"
  74      46BCDAC2 
  74      57209020 
  74      462CED81 
  74      74806630 
  75 031d 8EC0DC09 		.ascii	"\216\300\334\011H\0104\273\000\351\012\315n@z\000sO"
  75      480834BB 
  75      00E90ACD 
  75      6E407A00 
  75      734F
  76 032f 20BDA0D9 		.ascii	" \275\240\331\033H?h\366\0072\000\230\007\002\031\004"
  76      1B483F68 
  76      F6073200 
  76      98070219 
  76      04
  77 0340 CDC14086 		.ascii	"\315\301@\206@s(\220\341\300<\002\310(\030\030\015\344"
  77      40732890 
  77      E1C03C02 
  77      C8281818 
  77      0DE4
  78 0352 05187809 		.ascii	"\005\030x\011\276^\006\362G \257\000y\025\006\306\000"
  78      BE5E06F2 
  78      4720AF00 
  78      791506C6 
  78      00
  79 0363 F91390D7 		.ascii	"\371\023\220\327\200\274\016\344\015 o\002y\013\265"
  79      80BC0EE4 
  79      0D206F02 
  79      790BB5
  80 0372 32163EDF 		.ascii	"2\026>\337\006\362\016#\326q\360\365.|\375\005\276\336"
  80      06F20E23 
ARM GAS  C:\Users\victo\AppData\Local\Temp\ccVe2IoV.s 			page 6


  80      D671F0F5 
  80      2E7CFD05 
  80      BEDE
  81 0384 03ACBFC1 		.ascii	"\003\254\277\301\327\373@\306\343\224\277\303\347\007"
  81      D7FB40C6 
  81      E394BFC3 
  81      E707
  82 0392 402600E3 		.ascii	"@&\000\343\207\3605\021\276\376\001_\223`\312d\370\232"
  82      87F03511 
  82      BEFE015F 
  82      9360CA64 
  82      F89A
  83 03a4 02E46320 		.ascii	"\002\344c \237\000\371\027\220O\201L\003\362\031\220"
  83      9F00F917 
  83      904F814C 
  83      03F21990 
  84 03b4 7F03990E 		.ascii	"\177\003\231\016\344s _\000\231\001\344K \377\201\315"
  84      E473205F 
  84      009901E4 
  84      4B20FF81 
  84      CD
  85 03c5 7E05E4BF 		.ascii	"~\005\344\277\320\234\011\344k \016\0024\014i8\322\010"
  85      D09C09E4 
  85      6B200E02 
  85      340C6938 
  85      D208
  86 03d7 A4B39046 		.ascii	"\244\263\220F\"\215B\032\215t6\322\030\244\261@\255"
  86      228D421A 
  86      8D7436D2 
  86      18A4B140 
  86      AD
  87 03e8 F3F03B0E 		.ascii	"\363\360;\016\277\343\201Z\346c\317\002\244\211H\027"
  87      BFE3815A 
  87      E663CF02 
  87      A4894817 
  88 03f8 235D8274 		.ascii	"#]\202t)\322$\244\311HSpV*\322U\330\263\032i\032A\037"
  88      29D224A4 
  88      C9485370 
  88      562AD255 
  88      D8B31A69 
  89 040f 4AE74E97 		.ascii	"J\347N\227\201\343\231H\327\0025\255C\272\001{\262\220"
  89      81E39948 
  89      D70235AD 
  89      43BA017B 
  89      B290
  90 0421 66634F0E 		.ascii	"fcO\016\322M\330\263\031\351\026\304\313E\272\015\351"
  90      D24DD8B3 
  90      19E916C4 
  90      CB45BA0D 
  90      E9
  91 0432 76A47948 		.ascii	"v\244yH\235Hw!\335\215TQ\256\262X\200<RB)\374\257\026"
  91      9D487721 
  91      DD8D5451 
  91      AEB25880 
  91      3C524229 
  92 0449 9130E7E9 		.ascii	"\2210\347\3514\202\321\301db\021t\341j\341\021+\004"
  92      3482D1C1 
ARM GAS  C:\Users\victo\AppData\Local\Temp\ccVe2IoV.s 			page 7


  92      64621174 
  92      E16AE111 
  92      2B04
  93 045b 303B61C9 		.ascii	"0;a\311\367,\266\316\260\220,\337\334\026X\252h\033"
  93      F72CB6CE 
  93      B0902CDF 
  93      DC1658AA 
  93      681B
  94 046d C6B1E2D8 		.ascii	"\306\261\342\330\274\365t\346cG\264\303\372\220zWS\036"
  94      BCF574E6 
  94      6347B4C3 
  94      FA907A57 
  94      531E
  95 047f 79729E37 		.ascii	"yr\236763B#\222\311r\222\024\352\000.\037\262\201\314"
  95      36334223 
  95      92C97292 
  95      14EA002E 
  95      1FB281CC 
  96 0493 245910A9 		.ascii	"$Y\020\251$\233u+'H\304\351\360@\027\246\234\355\303"
  96      249B752B 
  96      2748C4E9 
  96      F04017A6 
  96      9CEDC3
  97 04a6 38724444 		.ascii	"8rDD\2270\031\366\017R\213I\270\363\336d\340U\0303\333"
  97      973019F6 
  97      0F528B49 
  97      B8F3DE64 
  97      E0551833 
  98 04bb 870DC74C 		.ascii	"\207\015\307L\270\2013dWeLi\224\312\241\3322\250\237"
  98      B8813364 
  98      57654C69 
  98      94CAA1DA 
  98      32A89F
  99 04ce 2F3A2BED 		.ascii	"/:+\355\000e\237\273<\305a\252#\233\035e\253\332\225"
  99      00659FBB 
  99      3CC561AA 
  99      239B1D65 
  99      ABDA95
 100 04e1 936B02D9 		.ascii	"\223k\002\331\"X.\361%?\260$\262\021E\333\004\242\235"
 100      22582EF1 
 100      253FB024 
 100      B21145DB 
 100      04A29D
 101 04f4 21E10FBC 		.ascii	"!\341\017\2748\\ G\334\277\374z\266\011\246\233\231"
 101      385C2047 
 101      DCBFFC7A 
 101      B609A69B 
 101      99
 102 0505 C936334E 		.ascii	"\31163N\275\364\201\214!4}\353\\\01320\220-Rz\263\022"
 102      BDF4818C 
 102      21347DEB 
 102      5C0B3230 
 102      902D527A 
 103 051b 1D020296 		.ascii	"\035\002\002\226\225\345\265\006f\306\271)\363\362&"
 103      95E5B506 
 103      66C6B929 
 103      F3F226
ARM GAS  C:\Users\victo\AppData\Local\Temp\ccVe2IoV.s 			page 8


 104 052a E4B4476B 		.ascii	"\344\264Gk\302\335M\335\376\263\257K\232\\)\315\217"
 104      C2DD4DDD 
 104      FEB3AF4B 
 104      9A5C29CD 
 104      8F
 105 053b 4C1A8156 		.ascii	"L\032\201VB\275\264\335&d\345\207\212\335\006\031\215"
 105      42BDB4DD 
 105      2664E587 
 105      8ADD0619 
 105      8D
 106 054c 61ADA6A4 		.ascii	"a\255\246\244\2561\254\330\274\354H\177hAc\2042.?\262"
 106      AE31ACD8 
 106      BCEC487F 
 106      68416384 
 106      322E3FB2 
 107 0560 9519631B 		.ascii	"\225\031c\033\256\261\335\260\343\366\034U&uK\220Bv"
 107      AEB1DDB0 
 107      E3F61C55 
 107      26754B90 
 107      4276
 108 0572 1876DC5E 		.ascii	"\030v\334^\277c\013\003\311\223;\266\210\035W\306\354"
 108      BF630B03 
 108      C9933BB6 
 108      881D57C6 
 108      EC
 109 0583 5B369673 		.ascii	"[6\226sw`\334K\222\242\366\372s\223\254\020\273\336"
 109      7760DC4B 
 109      92A2F6FA 
 109      7393AC10 
 109      BBDE
 110 0595 3BF7EC56 		.ascii	";\367\354V\233k\327N\271\353\235\006\211\2029\304\326"
 110      9B6BD74E 
 110      B9EB9D06 
 110      898239C4 
 110      D6
 111 05a6 FCCCEF29 		.ascii	"\374\314\357)\252\330\301\322\364.M\244\377\023L:\255"
 111      AAD8C1D2 
 111      F42E4DA4 
 111      FF134C3A 
 111      AD
 112 05b7 5B953D4D 		.ascii	"[\225=M\271\242N\034\361\346\303\035\215\212\362\257"
 112      B9A24E1C 
 112      F1E6C31D 
 112      8D8AF2AF 
 113 05c7 66FE5F47 		.ascii	"f\376_GQ\376n\024\325\210\354f\212\332\203b\355\025"
 113      51FE6E14 
 113      D588EC66 
 113      8ADA8362 
 113      ED15
 114 05d9 625508B1 		.ascii	"bU\010\261:q\324}7v\314Cg39\330)\261\017\303eW\002\021"
 114      3A71D47D 
 114      3776CC43 
 114      673339D8 
 114      29B10FC3 
 115 05f1 D676BFA6 		.ascii	"\326v\277\246q\221\375r\221\003l\021\006\255@T\236\335"
 115      7191FD72 
 115      91036C11 
ARM GAS  C:\Users\victo\AppData\Local\Temp\ccVe2IoV.s 			page 9


 115      06AD4054 
 115      9EDD
 116 0603 17A88BCA 		.ascii	"\027\250\213\312#\313\322\303Q\203*s\301\203\302'\274"
 116      23CBD2C3 
 116      51832A73 
 116      C183C227 
 116      BC
 117 0614 41DB8CB7 		.ascii	"A\333\214\267\021\346\223*\006\217\252\277\223$T\037"
 117      11E6932A 
 117      068FAABF 
 117      9324541F 
 118 0624 D2909E7F 		.ascii	"\322\220\236\1772\350\271\013\343w9\267\320k\027M\257"
 118      32E8B90B 
 118      E37739B7 
 118      D06B174D 
 118      AF
 119 0635 A5844232 		.ascii	"\245\204B2\260\344\177\347\003\313[\2137V\020&\201\217"
 119      B0E47FE7 
 119      03CB5B8B 
 119      37561026 
 119      818F
 120 0647 A6EBF20B 		.ascii	"\246\353\362\013\232\256\273z\274\357\237\345\276\363"
 120      9AAEBB7A 
 120      BCEF9FE5 
 120      BEF3
 121 0655 0DCAEDC6 		.ascii	"\015\312\355\306a\"rogp\345:\331q|\350\231\224[ \027"
 121      6122726F 
 121      6770E53A 
 121      D9717CE8 
 121      99945B20 
 122 066a 2944E576 		.ascii	")D\345vC\345.\334/\225+\265i3hS\345\232\370%\256\035"
 122      43E52EDC 
 122      2F952BB5 
 122      69336853 
 122      E59AF825 
 123 0680 174A75E9 		.ascii	"\027Ju\351Be\272\366&0\323g].*\302.\025Q3\337\227\363"
 123      4265BAF6 
 123      2630D367 
 123      5D2E2AC2 
 123      2E155133 
 124 0697 F7A8373A 		.ascii	"\367\2507:\215\341xX\206\343\021\203Qzr\030\231\200"
 124      8DE17858 
 124      86E31183 
 124      517A7218 
 124      9980
 125 06a9 2CCCFA47 		.ascii	",\314\372G5\033]\246\202I\006\340U\352\253\\\366VK\250"
 125      351B5DA6 
 125      824906E0 
 125      55EAAB5C 
 125      F6564BA8 
 126 06bd 9F26CEA5 		.ascii	"\237&\316\245\316\234\247\227\307\012;&\025v\334`\225"
 126      CE9CA797 
 126      C70A3B26 
 126      1576DC60 
 126      95
 127 06ce DE0CA68A 		.ascii	"\336\014\246\2129\335\323\033\341\204\304,B#\364V0+"
 127      39DDD31B 
ARM GAS  C:\Users\victo\AppData\Local\Temp\ccVe2IoV.s 			page 10


 127      E184C42C 
 127      4223F456 
 127      302B
 128 06e0 56EDF276 		.ascii	"V\355\362v\007S\257\236NJ=\235b0\372\350\365c}\247a"
 128      0753AF9E 
 128      4E4A3D9D 
 128      6230FAE8 
 128      F5637DA7 
 129 06f5 A49478EB 		.ascii	"\244\224x\353\365eb\372:C\002\354\305y\027\241\270]"
 129      F56562FA 
 129      3A4302EC 
 129      C57917A1 
 129      B85D
 130 0707 76B2A442 		.ascii	"v\262\244B\305~\226C\316\222\000_\260\273\277v\020j"
 130      C57E9643 
 130      CE92005F 
 130      B0BBBF76 
 130      106A
 131 0719 8637E10E 		.ascii	"\2067\341\016\263J\303E\232\355\347\261\200\305R\300"
 131      B34AC345 
 131      9AEDE7B1 
 131      80C552C0 
 132 0729 730643F6 		.ascii	"s\006C\366g0O$\322\376\232\341J\211\011\242\313\213"
 132      67304F24 
 132      D2FE9AE1 
 132      4A8909A2 
 132      CB8B
 133 073b 4517F333 		.ascii	"E\027\3633?\246!\325\006^\325H\246\323\322\355\"\246"
 133      3FA621D5 
 133      065ED548 
 133      A6D3D2ED 
 133      22A6
 134 074d 073414D3 		.ascii	"\0074\024\323\347\015\253\016\344\374?_~p\017\343\310"
 134      E70DAB0E 
 134      E4FC3F5F 
 134      7E700FE3 
 134      C8
 135 075e CCB678C1 		.ascii	"\314\266x\301\020\342\003u\251\263\261p\233\262\015"
 135      10E20375 
 135      A9B3B170 
 135      9BB20D
 136 076d 77179885 		.ascii	"w\027\230\205i\212#\242\273b\352vh\251{\365\225\330"
 136      698A23A2 
 136      BB62EA76 
 136      68A97BF5 
 136      95D8
 137 077f 78AB6BF9 		.ascii	"x\253k\371\213r\371Kp`]\020a\232U\261@\004\302\006\342"
 137      8B72F94B 
 137      70605D10 
 137      619A55B1 
 137      4004C206 
 138 0794 B1022F4B 		.ascii	"\261\002/K\005^1l%\213\000\320\223\316\237Et\336\337"
 138      055E316C 
 138      258B00D0 
 138      93CE9F45 
 138      74DEDF
 139 07a7 44B96F63 		.ascii	"D\271oc\336\337\324\350\375\331OHP\257\253^\225\256"
ARM GAS  C:\Users\victo\AppData\Local\Temp\ccVe2IoV.s 			page 11


 139      DEDFD4E8 
 139      FDD94F48 
 139      50AFAB5E 
 139      95AE
 140 07b9 5A6270FF 		.ascii	"Zbp\377\034\002@U,\347=}\000\224J\324k\030\0009\204"
 140      1C024055 
 140      2CE73D7D 
 140      00944AD4 
 140      6B180039 
 141 07ce 4740     		.ascii	"G@"
 142 07d0 C595A78B 		.ascii	"\305\225\247\213\200\353R?7x\004\244\237\233\365\310"
 142      80EB523F 
 142      377804A4 
 142      9F9BF5C8 
 143 07e0 1B238099 		.ascii	"\033#\200\231\366&\217\000\037p\371\306s\253/R\360\361"
 143      F6268F00 
 143      1F70F9C6 
 143      73AB2F52 
 143      F0F1
 144 07f2 2660D866 		.ascii	"&`\330f2=U\3566\363\355\014\362x\321_\344\242\267\014"
 144      323D55EE 
 144      36F3ED0C 
 144      F278D15F 
 144      E4A2B70C 
 145 0806 4619CC61 		.ascii	"F\031\314aV/\\\264\316\214\351\211\335\216nk\026ZO\004"
 145      562F5CB4 
 145      CE8CE989 
 145      DD8E6E6B 
 145      165A4F04 
 146 081a 93AE3E68 		.ascii	"\223\256>h\016\351\011\035\272(\3573><\244!\207\276"
 146      0EE9091D 
 146      BA28EF33 
 146      3E3CA421 
 146      87BE
 147 082c 63587028 		.ascii	"cXp(\347\227qlfq|W[p\207Xp\250\316\243[(\345&\356\321"
 147      E797716C 
 147      66717C57 
 147      5B708758 
 147      70A8CEA3 
 148 0846 350B2C42 		.ascii	"5\013,B\325\365\372o\031\370\357]\315\177k\217\3318"
 148      D5F5FA6F 
 148      19F8EF5D 
 148      CD7F6B8F 
 148      D938
 149 0858 DE708FCD 		.ascii	"\336p\217\315\\.\315\374\253\301yFp\2304g\325\034\254"
 149      5C2ECDFC 
 149      ABC17946 
 149      70983467 
 149      D51CAC
 150 086b 624C29EC 		.ascii	"bL)\354D\273\367L'Z\205\\\344>\372\322\010<\321\026"
 150      44BBF74C 
 150      275A855C 
 150      E43EFAD2 
 150      083CD116 
 151 087f 1CEDFCC4 		.ascii	"\034\355\374\304\211\326Rl>\241\374\320\036\013\227"
 151      89D6526C 
 151      3EA1FCD0 
ARM GAS  C:\Users\victo\AppData\Local\Temp\ccVe2IoV.s 			page 12


 151      1E0B97
 152 088e 6394C756 		.ascii	"c\224\307V\257\224V\2572\030a4\203q\005\342\035\241"
 152      AF9456AF 
 152      32186134 
 152      837105E2 
 152      1DA1
 153 08a0 F5D13A33 		.ascii	"\365\321:3\267R\266P^\370\026\354\261=\225\203?\220"
 153      B752B650 
 153      5EF816EC 
 153      B13D9583 
 153      3F90
 154 08b2 AB3EE40E 		.ascii	"\253>\344\016\276j\336\234\225hj\277N\012y$6\326Z\303"
 154      BE6ADE9C 
 154      95686ABF 
 154      4E0A7924 
 154      36D65AC3 
 155 08c6 3F7CDCF4 		.ascii	"?|\334\364T\360\217%\374o\034~_\342\217\2339|G\205T"
 155      54F08F25 
 155      FC6F1C7E 
 155      5FE28F9B 
 155      397C4785 
 156 08db 6BA63FF1 		.ascii	"k\246?\361\203(f^0\"7\256\206{\221\376\350i\354f\241"
 156      8328665E 
 156      302237AE 
 156      867B91FE 
 156      E869EC66 
 157 08f0 26A4862D 		.ascii	"&\244\206-T\213\0139\250v\335\251\021\232zA\347\237"
 157      548B0B39 
 157      A876DDA9 
 157      119A7A41 
 157      E79F
 158 0902 014A32E1 		.ascii	"\001J2\341\232*J\324R\301\346\212U\247\371m%z\245H\271"
 158      9A2A4AD4 
 158      52C1E68A 
 158      55A7F96D 
 158      257AA548 
 159 0917 D757865D 		.ascii	"\327W\206]\327\271l(\325\\6\214\212\224\013`m \312u"
 159      D7B96C28 
 159      D55C368C 
 159      8A940B60 
 159      6D20CA75 
 160 092b 07991977 		.ascii	"\007\231\031wS~n\217\010\371\227<\326S8\325\364\024"
 160      537E6E8F 
 160      08F9973C 
 160      D65338D5 
 160      F414
 161 093d 41EB1AFF 		.ascii	"A\353\032\377e\016#\237y,\314\217gQC\310\277\354:\330"
 161      650E239F 
 161      792CCC8F 
 161      675143C8 
 161      BFEC3AD8 
 162 0951 CCEC3C6D 		.ascii	"\314\354<m\206\245R\213\344\371\033)k\265b>kj\015$\000"
 162      86A5528B 
 162      E4F91B29 
 162      6BB5623E 
 162      6B6A0D24 
 163 0966 CEB8E744 		.ascii	"\316\270\347DJH(?\037!\234\364\217\036\313\031)\345"
ARM GAS  C:\Users\victo\AppData\Local\Temp\ccVe2IoV.s 			page 13


 163      4A48283F 
 163      1F219CF4 
 163      8F1ECB19 
 163      29E5
 164 0978 8C32C8F9 		.ascii	"\2142\310\371\012\203q9\251\226\032^\3219i[\021\035"
 164      0A837139 
 164      A9961A5E 
 164      D139695B 
 164      111D
 165 098a 9531E7F3 		.ascii	"\2251\347\363\377\207\017\277\312\226\230]Rx\0143\252"
 165      FF870FBF 
 165      CA96985D 
 165      52780C33 
 165      AA
 166 099b 3D5FD37E 		.ascii	"=_\323~Zx\352f\325\245\375h\251\375\331\206E\307p\010"
 166      5A78EA66 
 166      D5A5FD68 
 166      A9FDD986 
 166      45C77008 
 167 09af 990FCD2C 		.ascii	"\231\017\315,\037\306PC\240\214\321\231?P8rB\326\265"
 167      1FC65043 
 167      A08CD199 
 167      3F503872 
 167      42D6B5
 168 09c2 C4BE7CF8 		.ascii	"\304\276|\370On\\\316\344\326\307\346P\315\307\346r"
 168      4F6E5CCE 
 168      E4D6C7E6 
 168      50CDC7E6 
 168      72
 169 09d3 39980EAF 		.ascii	"9\230\016\257\255\0260\257\271\2011\273\205\211\225"
 169      AD1630AF 
 169      B98131BB 
 169      858995
 170 09e2 30F3044C 		.ascii	"0\363\004Le\314\325V\034\345u\306\177\355zv\276/w\307"
 170      65CCD556 
 170      1CE575C6 
 170      7FED7A76 
 170      BE2F77C7 
 171 09f6 48A1902D 		.ascii	"H\241\220-\017\302j\375]\012\211\223\012\2117(\344\015"
 171      0FC26AFD 
 171      5D0A8993 
 171      0A893728 
 171      E40D
 172 0a08 0EB12D2E 		.ascii	"\016\261-.n/\277\037\267S\310|\012Q\026\236\020y\\,"
 172      6E2FBF1F 
 172      B753C87C 
 172      0A51169E 
 172      10795C2C 
 173 0a1c F2269396 		.ascii	"\362&\223\226\261Bgbde\376\012\241\247\267\230.\330"
 173      B1426762 
 173      6465FE0A 
 173      A1A7B798 
 173      2ED8
 174 0a2e 20CB6E78 		.ascii	" \313nx\324\303[\011\353\004]\026\204\377\222>Z0\241"
 174      D4C35B09 
 174      EB045D16 
 174      84FF923E 
ARM GAS  C:\Users\victo\AppData\Local\Temp\ccVe2IoV.s 			page 14


 174      5A30A1
 175 0a41 7EB932DB 		.ascii	"~\2712\333A,\261\341S\341\253\326\274\246\015\273t\035"
 175      412CB1E1 
 175      53E1ABD6 
 175      BCA60DBB 
 175      741D
 176 0a53 A468CF05 		.ascii	"\244h\317\005E\005\313\304\032c\231p9\213J2|p\177\027"
 176      4505CBC4 
 176      1A639970 
 176      398B4A32 
 176      7C707F17 
 177 0a67 1D627F55 		.ascii	"\035b\177U)\2672t\006O\220\373[`\330\337\333\034b\366"
 177      29B73274 
 177      064F90FB 
 177      5B60D8DF 
 177      DB1C62F6 
 178 0a7b D68C38FE 		.ascii	"\326\2148\376@P[\015\257\251$\221\326\315\354\365\002"
 178      40505B0D 
 178      AFA92491 
 178      D6CDECF5 
 178      02
 179 0a8c 2EA490C2 		.ascii	".\244\220\302\337\306\024~\372\330\000m\243l\312\251"
 179      DFC6147E 
 179      FAD8006D 
 179      A36CCAA9 
 180 0a9c D45B8B50 		.ascii	"\324[\213P\355*s\242E\014\017X\3164}\"\311\267\007\027"
 180      ED2A73A2 
 180      450C0F58 
 180      CE347D22 
 180      C9B70717 
 181 0ab0 628196CE 		.ascii	"b\201\226\316p\336jwk\351v\012\334A\371\313\323T\370"
 181      70DE6A77 
 181      6BE9760A 
 181      DC41F9CB 
 181      D354F8
 182 0ac3 08CC4FBA 		.ascii	"\010\314O\272MKI\032\0335\267\3038\014*fC\254\025\010"
 182      4D4B491A 
 182      1B35B7C3 
 182      380C2A66 
 182      43AC1508 
 183 0ad7 D1D74139 		.ascii	"\321\327A9\325J\305\027\236\352\253\242\\{\307\3509"
 183      D54AC517 
 183      9EEAABA2 
 183      5C7BC7E8 
 183      39
 184 0ae8 4DABA957 		.ascii	"M\253\251W\335\234\327\324\315\023\217\225,f\216\264"
 184      DD9CD7D4 
 184      CD138F95 
 184      2C668EB4 
 185 0af8 04AC4196 		.ascii	"\004\254A\226j\376(\324<\316cg\\&\2351I\250z\211P\365"
 185      6AFE28D4 
 185      3CCE6367 
 185      5C269D31 
 185      49A87A89 
 186 0b0e BB4C3286 		.ascii	"\273L2\206\304\375\263\264\360W\321\375\027\006\222"
 186      C4FDB3B4 
 186      F057D1FD 
ARM GAS  C:\Users\victo\AppData\Local\Temp\ccVe2IoV.s 			page 15


 186      170692
 187 0b1d 5A193B0F 		.ascii	"Z\031;\017\325owj\036\272\375DN\236\335\245\360d\251"
 187      D56F776A 
 187      1EBAFD44 
 187      4E9EDDA5 
 187      F064A9
 188 0b30 F0E51C36 		.ascii	"\360\345\0346\354T\324\371\302\343\002\343=\006\203"
 188      EC54D4F9 
 188      C2E302E3 
 188      3D0683
 189 0b3f E2A61ED7 		.ascii	"\342\246\036\327\014\266l\376\226\"o\234\037\352\234"
 189      0CB66CFE 
 189      96226F9C 
 189      1FEA9C
 190 0b4e CA320D5B 		.ascii	"\3122\015[_$\232\025h\261\367x\270\325D\370s\210\277"
 190      5F249A15 
 190      68B1F778 
 190      B8D544F8 
 190      7388BF
 191 0b61 79BCC395 		.ascii	"y\274\303\225r\207)b\207\011B\214\3679\214\274\3527"
 191      72872962 
 191      8709428C 
 191      F7398CBC 
 191      EA37
 192 0b73 61979754 		.ascii	"a\227\227T\332@\211P\357\032\337\3105V\241\264\357\363"
 192      DA408950 
 192      EF1ADFC8 
 192      3556A1B4 
 192      EFF3
 193 0b85 802B28D4 		.ascii	"\200+(\324\216\240\361U\024N\277\232\360c\233\010\372"
 193      8EA0F155 
 193      144EBF9A 
 193      F0639B08 
 193      FA
 194 0b96 18FF1580 		.ascii	"\030\377\025\200\254F?\323\305\333x\364\261`%\276\015"
 194      AC463FD3 
 194      C5DB78F4 
 194      B16025BE 
 194      0D
 195 0ba7 D11D2C5E 		.ascii	"\321\035,^\012o \2138\335*\0054q]\223\331\312\351\244"
 195      0A6F208B 
 195      38DD2A05 
 195      34715D93 
 195      D9CAE9A4 
 196 0bbb 3DA3E33B 		.ascii	"=\243\343;<\360/\205\3014lzu\000\327\353(r_e\314\235"
 196      3CF02F85 
 196      C1346C7A 
 196      7500D7EB 
 196      28725F65 
 197 0bd1 539AA3FC 		.ascii	"S\232\243\374\275\241l\233f\010\276\0178\277<\212\314"
 197      BDA16C9B 
 197      6608BE0F 
 197      38BF3C8A 
 197      CC
 198 0be2 EC284AD7 		.ascii	"\354(J\327\262\3557\342~\360\201.\003t\342\207mXBV~"
 198      B2ED37E2 
 198      7EF0812E 
ARM GAS  C:\Users\victo\AppData\Local\Temp\ccVe2IoV.s 			page 16


 198      0374E287 
 198      6D584256 
 199 0bf7 9A70F609 		.ascii	"\232p\366\011\365:\273\321\273\327H\357\3160x\367\207"
 199      F53ABBD1 
 199      BBD748EF 
 199      CE3078F7 
 199      87
 200 0c08 1EDB2553 		.ascii	"\036\333%S\332\345[\203wOd\2420$\356\335\025\001\274"
 200      DAE55B83 
 200      774F64A2 
 200      3024EEDD 
 200      1501BC
 201 0c1b F31F0D39 		.ascii	"\363\037\0159\362Z\351\310\025\2559\373$6\203\273q\201"
 201      F25AE9C8 
 201      15AD39FB 
 201      243683BB 
 201      7181
 202 0c2d 3B37FE27 		.ascii	";7\376'\272\361D\341\306\353\3201&q7\316\337+\3241\331"
 202      BAF144E1 
 202      C6EBD031 
 202      267137CE 
 202      DF2BD431 
 203 0c42 E3AD7C27 		.ascii	"\343\255|'\267\262\336\340\306S\030\3143\372\355\367"
 203      B7B2DEE0 
 203      C65318CC 
 203      33FAEDF7 
 204 0c52 1274038A 		.ascii	"\022t\003\2127\205\213wh\226\210\262\217=F\312\222H"
 204      37858B77 
 204      689688B2 
 204      8F3D46CA 
 204      9248
 205 0c64 D9066B7D 		.ascii	"\331\006k}\342\361\371\232#1~\0205\\\276\254\341>f@"
 205      E2F1F99A 
 205      23317E10 
 205      355CBEAC 
 205      E13E6640 
 206 0c78 C2AB3A8B 		.ascii	"\302\253:\213s\205\025\273\013\265\022n\366\376\350"
 206      738515BB 
 206      0BB5126E 
 206      F6FEE8
 207 0c87 E55856DA 		.ascii	"\345XV\332\257kg\312\326\270\344L\235!7JCn\202\022."
 207      AF6B67CA 
 207      D6B8E44C 
 207      9D21374A 
 207      436E8212 
 208 0c9c 9DF26C1E 		.ascii	"\235\362l\036\002E\211.\322,\374\236X\274P\273\274\234"
 208      0245892E 
 208      D22CFC9E 
 208      58BC50BB 
 208      BC9C
 209 0cae BBB1FB0E 		.ascii	"\273\261\373\016?\255\234Zyr\376\312\2029\272\347\354"
 209      3FAD9C5A 
 209      7972FECA 
 209      8239BAE7 
 209      EC
 210 0cbf CD12790B 		.ascii	"\315\022y\013\305\032\267\340\327\325\325\030\345\346"
 210      C51AB7E0 
ARM GAS  C:\Users\victo\AppData\Local\Temp\ccVe2IoV.s 			page 17


 210      D7D5D518 
 210      E5E6
 211 0ccd DBECF8CD 		.ascii	"\333\354\370\315\245xI\264\2600\014\206C\241#\036\012"
 211      A57849B4 
 211      B0300C86 
 211      43A1231E 
 211      0A
 212 0cde 9D923796 		.ascii	"\235\2227\226\263\342\314\334\031\"\263\213\254\214"
 212      B3E2CCDC 
 212      1922B38B 
 212      AC8C
 213 0cec 8A8A4565 		.ascii	"\212\212Ee\364\257\206ni?\032\002\363S\306\357\272\226"
 213      F4AF866E 
 213      693F1A02 
 213      F353C6EF 
 213      BA96
 214 0cfe 6975CFA7 		.ascii	"iu\317\247\272H\354\252\025\360\033JO\374\356\265l+"
 214      BA48ECAA 
 214      15F01B4A 
 214      4FFCEEB5 
 214      6C2B
 215 0d10 755DCB2A 		.ascii	"u]\313*cj\212\037\010\300il\322\321\215\033c\371c\177"
 215      636A8A1F 
 215      08C0696C 
 215      D2D18D1B 
 215      63F9637F 
 216 0d24 748450C7 		.ascii	"t\204P\307\212o\326D\021\027\3166\251\216\355\0061?"
 216      8A6FD644 
 216      1117CE36 
 216      A98EED06 
 216      313F
 217 0d36 6310A21A 		.ascii	"c\020\242\032\201\007\353sZ,\376\273!\220\035\006\220"
 217      8107EB73 
 217      5A2CFEBB 
 217      21901D06 
 217      90
 218 0d47 E99CBFFA 		.ascii	"\351\234\277\372\330\2742\033\177\236\206\367\351<-"
 218      D8BC321B 
 218      7F9E86F7 
 218      E93C2D
 219 0d56 0DE5ADCF 		.ascii	"\015\345\255\317\025\257H\323\345\366\257\322n\220\210"
 219      15AF48D3 
 219      E5F6AFD2 
 219      6E9088
 220 0d65 4A6877AE 		.ascii	"Jhw\256\005\0319\237\243L6\036\303#x\337\027n\334\325"
 220      0519399F 
 220      A34C361E 
 220      C32378DF 
 220      176EDCD5 
 221 0d79 E2D65D9D 		.ascii	"\342\326]\235\322]w\012\031\023\005\356\014\006\303"
 221      D25D770A 
 221      191305EE 
 221      0C06C3
 222 0d88 D01B0C48 		.ascii	"\320\033\014H\367\230\273$\346n\014\310\031< o\237\020"
 222      F798BB24 
 222      E66E0CC8 
 222      193C206F 
ARM GAS  C:\Users\victo\AppData\Local\Temp\ccVe2IoV.s 			page 18


 222      9F10
 223 0d9a F9E24B8F 		.ascii	"\371\342K\217\221\366H\244\275u\002\322\015\200\273"
 223      91F648A4 
 223      BD7502D2 
 223      0D80BB
 224 0da9 DF2C9A90 		.ascii	"\337,\232\220}\022`?\212\362%\027\345\316B!\312\177"
 224      7D12603F 
 224      8AF22517 
 224      E5CE4221 
 224      CA7F
 225 0dbb 3CBE401F 		.ascii	"<\276@\037\240\332\005\372 \255{K\377\212\303d\257/"
 225      A0DA05FA 
 225      20AD7B4B 
 225      FF8AC364 
 225      AF2F
 226 0dcd FE5FBCA4 		.ascii	"\376_\274\244\307\263\023\345\247\2062Y\375o\333r\215"
 226      C7B313E5 
 226      A7863259 
 226      FD6FDB72 
 226      8D
 227 0dde 7C94F62B 		.ascii	"|\224\366+\341d\347\277\342+\375\227\315\311\334rp\017"
 227      E164E7BF 
 227      E22BFD97 
 227      CDC9DC72 
 227      700F
 228 0df0 4F12119A 		.ascii	"O\022\021\232\357\256<{%I\227$\016I\267+0H:\223C,\272"
 228      EFAE3C7B 
 228      25499724 
 228      0E49B72B 
 228      30483A93 
 229 0e07 9F91E925 		.ascii	"\237\221\351%\334\216\311Zh\220\265^\270\303(\324L\024"
 229      DC8EC95A 
 229      6890B55E 
 229      B8C328D4 
 229      4C14
 230 0e19 CA87237E 		.ascii	"\312\207#~\335\020\377\021\203\327;\010\237p3\242p."
 230      DD10FF11 
 230      83D73B08 
 230      9F7033A2 
 230      702E
 231 0e2b 4F2DB5B5 		.ascii	"O-\265\265\217\241\2008\352\251\004\307P\002\007\301"
 231      8FA18038 
 231      EAA904C7 
 231      500207C1 
 232 0e3b B2F6C4C9 		.ascii	"\262\366\304\311\036u\353\332Rb\203\337\"\272\376\226"
 232      1E75EBDA 
 232      526283DF 
 232      22BAFE96 
 233 0e4b 5BE20B71 		.ascii	"[\342\013q\323\015\222F\017Y0\024\\\320\262y\030$\270"
 233      D30D9246 
 233      0F593014 
 233      5CD0B279 
 233      1824B8
 234 0e5e 8C23DFD4 		.ascii	"\214#\337\324P\376\363\222\226\023\363N\357\350\342"
 234      50FEF392 
 234      9613F34E 
 234      EFE8E2
ARM GAS  C:\Users\victo\AppData\Local\Temp\ccVe2IoV.s 			page 19


 235 0e6d 5AF6B85C 		.ascii	"Z\366\270\\\366\204a#\341\0040\\\217\242Z\331\020Nt"
 235      F6846123 
 235      E104305C 
 235      8FA25AD9 
 235      104E74
 236 0e80 D9AA2F0B 		.ascii	"\331\252/\013W\002\037=\225\024_~]\333S)\216\244\310"
 236      57021F3D 
 236      95145F7E 
 236      5DDB5329 
 236      8EA4C8
 237 0e93 279E16EB 		.ascii	"'\236\026\353\015\201\"\351\301'\015gR\224;\020\325"
 237      0D8122E9 
 237      C1270D67 
 237      52943B10 
 237      D5
 238 0ea4 2DC82909 		.ascii	"-\310)\011rZ\036J\353\251&\013@\011\241{)\307\355\374"
 238      725A1E4A 
 238      EBA9260B 
 238      4009A17B 
 238      29C7EDFC 
 239 0eb8 5EBD7F93 		.ascii	"^\275\177\223\270\023F{.\353\031\271\314YM\326\324\013"
 239      B813467B 
 239      2EEB19B9 
 239      CC594DD6 
 239      D40B
 240 0eca 42DAD99E 		.ascii	"B\332\331\236K[,a\316\031\252\204\030\"\200.$=\\\355"
 240      4B5B2C61 
 240      CE19AA84 
 240      1822802E 
 240      243D5CED 
 241 0ede 2D5C086B 		.ascii	"-\\\010k\320\363<w\236\012\337A5\261\201]l\253\267\262"
 241      D0F33C77 
 241      9E0ADF41 
 241      35B1815D 
 241      6CABB7B2 
 242 0ef2 4FE5A76D 		.ascii	"O\345\247m\376\"\371\264\024Yu\312\314\337\2505\373"
 242      FE22F9B4 
 242      145975CA 
 242      CCDFA835 
 242      FB
 243 0f03 97966D7D 		.ascii	"\227\226m}\315e\377\013\322\376\027\371\221\230\275"
 243      CD65FF0B 
 243      D2FE17F9 
 243      9198BD
 244 0f12 2A6D135F 		.ascii	"*m\023_\364y\205\\\342>[\026\177\310K\000\326\373\334"
 244      F479855C 
 244      E23E5B16 
 244      7FC84B00 
 244      D6FBDC
 245 0f25 72198EA2 		.ascii	"r\031\216\242K\342\254\356\3035\314\356N\205E\203\271"
 245      4BE2ACEE 
 245      C335CCEE 
 245      4E854583 
 245      B9
 246 0f36 A8B14FA8 		.ascii	"\250\261O\250\206\325\223\356~\020\267\222+\262\236"
 246      86D593EE 
 246      7E10B792 
ARM GAS  C:\Users\victo\AppData\Local\Temp\ccVe2IoV.s 			page 20


 246      2BB29E
 247 0f45 BC6AF086 		.ascii	"\274j\360\206y\236\233\251D\352\267\324PP\306\021\220"
 247      799E9BA9 
 247      44EAB7D4 
 247      5050C611 
 247      90
 248 0f56 06C0F441 		.ascii	"\006\300\364A\036O\352\024\205\004K\3028\"j\302k\242"
 248      1E4FEA14 
 248      85044BC2 
 248      38226AC2 
 248      6BA2
 249 0f68 A43C1FF5 		.ascii	"\244<\037\365\233x\211\231O`\016\012wi\224P\316\267"
 249      9B788999 
 249      4F600E0A 
 249      77699450 
 249      CEB7
 250 0f7a 91075378 		.ascii	"\221\007Sx\332rjikS\316VQ\333\204:\337\000\215]\227"
 250      DA726A69 
 250      6B53CE56 
 250      51DB843A 
 250      DF008D5D 
 251 0f8f 1ABB8171 		.ascii	"\032\273\201q>\237cd\035\327\302f\201\347{\274)"
 251      3E9F6364 
 251      1DD7C266 
 251      81E77BBC 
 251      29
 252 0fa0 F7F88BC1 		.ascii	"\367\370\213\301\207\022\011\000\375n\255\351\036\366"
 252      87120900 
 252      FD6EADE9 
 252      1EF6
 253 0fae 9684BD8D 		.ascii	"\226\204\275\215\"&\0224\352\363J\231/\341\257B\027"
 253      22261234 
 253      EAF34A99 
 253      2FE1AF42 
 253      17
 254 0fbf 1E098344 		.ascii	"\036\011\203D\220\206*\202;\206\2242\213\300\014,,0"
 254      90862A82 
 254      3B869432 
 254      8BC00C2C 
 254      2C30
 255 0fd1 A57C4BB5 		.ascii	"\245|K\265~\335[E?\355\335o\303\325\"\255\000\252\317"
 255      7EDD5B45 
 255      3FEDDD6F 
 255      C3D522AD 
 255      00AACF
 256 0fe4 67EFEADF 		.ascii	"g\357\352\337\370\372\213\211\254\020\272\2459\314b"
 256      F8FA8B89 
 256      AC10BAA5 
 256      39CC62
 257 0ff3 D240C62B 		.ascii	"\322@\306+3\210\267\204\300\004t\342:"
 257      3388B784 
 257      C00474E2 
 257      3A
 258 1000 196F893E 		.ascii	"\031o\211>\343\015P\264?6\270]$\316\327\245\236[\254"
 258      E30D50B4 
 258      3F36B85D 
 258      24CED7A5 
ARM GAS  C:\Users\victo\AppData\Local\Temp\ccVe2IoV.s 			page 21


 258      9E5BAC
 259 1013 5CAAF6D7 		.ascii	"\\\252\366\327g;\353\357I\200\012\264\315R~L\344\236"
 259      673BEBEF 
 259      49800AB4 
 259      CD527E4C 
 259      E49E
 260 1025 351C134C 		.ascii	"5\034\023L\322\201\2067O+\337\325\346\315\335\271\330"
 260      D2818637 
 260      4F2BDFD5 
 260      E6CDDDB9 
 260      D8
 261 1036 56D775D4 		.ascii	"V\327u\324\312\352\3336\014\315\022\202%o\367u\333K"
 261      CAEADB36 
 261      0CCD1282 
 261      256FF775 
 261      DB4B
 262 1048 A0E4ED07 		.ascii	"\240\344\355\007Up\177\354\032\260\347,\324\277\203"
 262      55707FEC 
 262      1AB0E72C 
 262      D4BF83
 263 1057 E067247E 		.ascii	"\340g$~^\337}\237\303$\221\206^q\356\033t\234L`\206"
 263      5EDF7D9F 
 263      C3249186 
 263      5E71EE1B 
 263      749C4C60 
 264 106c E7AF4095 		.ascii	"\347\257@\225\270\313d\376\243\320\341j-\015\305W\234"
 264      B8CB64FE 
 264      A3D0E16A 
 264      2D0DC557 
 264      9C
 265 107d 398CA7AB 		.ascii	"9\214\247\253\375\200\226\327\262\235\007\226\352j\360"
 265      FD8096D7 
 265      B29D0796 
 265      EA6AF0
 266 108c 2A09F180 		.ascii	"*\011\361\200\212?\026\301LV\363\273\231\354\241\216"
 266      8A3F16C1 
 266      4C56F3BB 
 266      99ECA18E 
 267 109c 3F21AB36 		.ascii	"?!\2536R\004|\212\273\337\352|\334\276\275>\222o\257"
 267      52047C8A 
 267      BBDFEA7C 
 267      DCBEBD3E 
 267      926FAF
 268 10af 8F0DDB4F 		.ascii	"\217\015\333O%\002H\376Nca5\361o\324\360\030\233Jt\257"
 268      250248FE 
 268      4E636135 
 268      F16FD4F0 
 268      189B4A74 
 269 10c4 B1839547 		.ascii	"\261\203\225Gf\356q{\327\210\343*\303\363\337\015\253"
 269      66EE717B 
 269      D788E32A 
 269      C3F3DF0D 
 269      AB
 270 10d5 A52C3506 		.ascii	"\245,5\006Y2\011\000\271^\202\327l\373X\033\320\375"
 270      59320900 
 270      B95E82D7 
 270      6CFB581B 
ARM GAS  C:\Users\victo\AppData\Local\Temp\ccVe2IoV.s 			page 22


 270      D0FD
 271 10e7 70384439 		.ascii	"p8D9\242\262\202|\250&\304\245^\234i\255\347?\034\326"
 271      A2B2827C 
 271      A826C4A5 
 271      5E9C69AD 
 271      E73F1CD6 
 272 10fb CA8ACFA1 		.ascii	"\312\212\317\241\326\255\325\326\021\000\252\242\366"
 272      D6ADD5D6 
 272      1100AAA2 
 272      F6
 273 1108 67A82343 		.ascii	"g\250#CU\0155L\005\037Y\307}d\303\276\250\247\373]%"
 273      550D354C 
 273      051F59C7 
 273      7D64C3BE 
 273      A8A7FB5D 
 274 111d 5C950FFA 		.ascii	"\\\225\017\372*\236\200qq\321\367\261f\362\373P!\263"
 274      2A9E8071 
 274      71D1F7B1 
 274      66F2FB50 
 274      21B3
 275 112f 54ACB9EC 		.ascii	"T\254\271\354\360\354x`\361@\254}\275\025\022\251\006"
 275      F0EC7860 
 275      F140AC7D 
 275      BD1512A9 
 275      06
 276 1140 0C4E2E4F 		.ascii	"\014N.OUYw\354\243\362C~\330\357\243\220(5`\010\330"
 276      555977EC 
 276      A3F2437E 
 276      D8EFA390 
 276      28356008 
 277 1155 6C985057 		.ascii	"l\230PWeL\345\303\351|\257\253\000\333q7%\226\277\307"
 277      654CE5C3 
 277      E97CAFAB 
 277      00DB7137 
 277      2596BFC7 
 278 1169 5DD56EBF 		.ascii	"]\325n\277\331g\303\226\351\262g\264*\237\320\325\272"
 278      D967C396 
 278      E9B267B4 
 278      2A9FD0D5 
 278      BA
 279 117a F65A4D04 		.ascii	"\366ZM\004\210\374\023$s\220BbTn>Uc\322]\246\206s\333"
 279      88FC1324 
 279      73904262 
 279      546E3E55 
 279      63D25DA6 
 280 1191 8DD06CA7 		.ascii	"\215\320l\247)\270\336\013\367\034\324\244/\354\330"
 280      29B8DE0B 
 280      F71CD4A4 
 280      2FECD8
 281 11a0 97F12DAD 		.ascii	"\227\361-\255\312\337\207\357m\346V\012\231\253\006"
 281      CADF87EF 
 281      6DE6560A 
 281      99AB06
 282 11af 0CC3DFC8 		.ascii	"\014\303\337\310\207\303\006G\212\337\337\023\262\316"
 282      87C30647 
 282      8ADFDF13 
 282      B2CE
ARM GAS  C:\Users\victo\AppData\Local\Temp\ccVe2IoV.s 			page 23


 283 11bd 9D144B6F 		.ascii	"\235\024Ko\362\334)c\245\316\347\0316\271\231\010 \371"
 283      F2DC2963 
 283      A5CEE719 
 283      36B99908 
 283      20F9
 284 11cf CBBC85E5 		.ascii	"\313\274\205\345\2578\261\311\360\351\032\227.>F)7["
 284      AF38B1C9 
 284      F0E91A97 
 284      2E3E4629 
 284      375B
 285 11e1 8A9C5478 		.ascii	"\212\234Tx\305\2173l\301\274_\261\346\200\215\027?\232"
 285      C58F336C 
 285      C1BC5FB1 
 285      E6808D17 
 285      3F9A
 286 11f3 B2AFEF8C 		.ascii	"\262\257\357\214\202\002_\333y\274T\366|\203\034\271"
 286      82025FDB 
 286      79BC54F6 
 286      7C831CB9 
 287 1203 44801C3C 		.ascii	"D\200\034<Vx\330,\2130\213B\022\324\272\251\253^\310"
 287      5678D82C 
 287      8B308B42 
 287      12D4BAA9 
 287      AB5EC8
 288 1216 05A8CC5C 		.ascii	"\005\250\314\\\341\226\325\311\237=\225[&J\025-d8\370"
 288      E196D5C9 
 288      9F3D955B 
 288      264A152D 
 288      6438F8
 289 1229 03B678DF 		.ascii	"\003\266x\337]%D\334\326`\342]d\330\320v\"f\254\373"
 289      5D2544DC 
 289      D660E25D 
 289      64D8D076 
 289      2266ACFB 
 290 123d EEF16E6E 		.ascii	"\356\361nn\324\332\274j\250*\027\253\036\346\342%\270"
 290      D4DABC6A 
 290      A82A17AB 
 290      1EE6E225 
 290      B8
 291 124e A1EDE287 		.ascii	"\241\355\342\207\220\233\205\302\356y\015\312\261\324"
 291      909B85C2 
 291      EE790DCA 
 291      B1D4
 292 125c 20879388 		.ascii	" \207\223\210\031\2259\227Fr1\036bq\273\314S1\222P\014"
 292      19953997 
 292      4672311E 
 292      6271BBCC 
 292      53319250 
 293 1271 A710A3E8 		.ascii	"\247\020\243\350\264f\363]\244!k$\033R\317n\"f$\324"
 293      B466F35D 
 293      A4216B24 
 293      1B52CF6E 
 293      226624D4 
 294 1285 9444F888 		.ascii	"\224D\370\210\213\"+@\025\262\334S\003\257@Av\363\352"
 294      8B222B40 
 294      15B2DC53 
 294      03AF4041 
ARM GAS  C:\Users\victo\AppData\Local\Temp\ccVe2IoV.s 			page 24


 294      76F3EA
 295 1298 6834FEAD 		.ascii	"h4\376\255\314y\022\352<Vi\205\231<\004\011t\263\004"
 295      CC7912EA 
 295      3C566985 
 295      993C0409 
 295      74B304
 296 12ab D6A3D7F8 		.ascii	"\326\243\327\370W&O\235<}\342\027\223?\232\360\316\264"
 296      57264F9D 
 296      3C7DE217 
 296      933F9AF0 
 296      CEB4
 297 12bd 19D3274D 		.ascii	"\031\323'M\036?\366\235i/\016\030\377\306\273\177\235"
 297      1E3FF69D 
 297      692F0E18 
 297      FFC6BB7F 
 297      9D
 298 12ce F0E2B83F 		.ascii	"\360\342\270?\277>aL\277\027'\214ys\\\257I\212\367G"
 298      BF3E614C 
 298      BF17278C 
 298      79735CAF 
 298      498AF747 
 299 12e2 9F4C99F2 		.ascii	"\237L\231\362\342\264\031S\277\260M\236\372\321\270"
 299      E2B41953 
 299      BFB04D9E 
 299      FAD1B8
 300 12f1 E913A77E 		.ascii	"\351\023\247~>e\362\364\377\007\373\006\247\230"
 300      3E65F2F4 
 300      FF07FB06 
 300      A798
 301              		.text
 302              		.section	.gnu.lto_.symbol_nodes.91bc8410,"",%progbits
 303 0000 789C2DC4 		.ascii	"x\234-\304\271\015\2000\020E\301\347c}\221P \275l\013"
 303      B90D8030 
 303      1045C1E7 
 303      637D9150 
 303      20BD6C0B 
 304 0014 0E881115 		.ascii	"\016\210\021\025\221R\003]\300\227\230`\022\260\361"
 304      9152035D 
 304      C0979860 
 304      12B0F1
 305 0023 8B38CC0B 		.ascii	"\2138\314\013\3349\316\206\005V\307b\320)\352\234\264"
 305      DC39CE86 
 305      0556C762 
 305      D029EA9C 
 305      B4
 306 0034 655D4CD7 		.ascii	"e]L\327\242[\325\275\351\321\3652\2763\354\317\035\340"
 306      A25BD5BD 
 306      E9D1F532 
 306      BE33ECCF 
 306      1DE0
 307 0046 059D550D 		.ascii	"\005\235U\015\261"
 307      B1
 308              		.text
 309              		.section	.gnu.lto_.refs.91bc8410,"",%progbits
 310 0000 789C258D 		.ascii	"x\234%\215?K\302\001\024E\317}O\177i\015\321\026-\015"
 310      3F4BC201 
 310      1445CF7D 
ARM GAS  C:\Users\victo\AppData\Local\Temp\ccVe2IoV.s 			page 25


 310      4F7F690D 
 310      D1162D0D 
 311 0014 52E0D610 		.ascii	"R\340\326\020\0268\370\331\264\257 \375\241\335\250"
 311      1638F8D9 
 311      B4AF20FD 
 311      A1DDA8
 312 0023 251771AC 		.ascii	"%\027q\254\020*\202\3000\014\034\242)\027i\317\305."
 312      102A82C0 
 312      300C1CA2 
 312      291769CF 
 312      C52E
 313 0035 F4E070DE 		.ascii	"\364\340p\336\205wy\011|\362?MP\020UrS\271En+w\210]"
 313      85777909 
 313      7CF23F4D 
 313      50105572 
 313      53B9456E 
 314 004d B2A6DC53 		.ascii	"\262\246\334S\354\023u\342\200<T6\024G\3041\331R>@\214"
 314      EC1375E2 
 314      803C5436 
 314      1447C431 
 314      D9523E40 
 315 0062 DC7C344F 		.ascii	"\334|4OPzv~5c(O\241\370\200\265o{n\026\250\370q\376"
 315      507A767E 
 315      3563284F 
 315      A1F880B5 
 315      6F7B6E16 
 316 007a F5BE342B 		.ascii	"\365\2764+\347\266(:\242|\"*]\251rj\237I\325s\221\027"
 316      E7B6283A 
 316      A27C222A 
 316      5DA9726A 
 316      9F49D573 
 317 0090 525E3AF7 		.ascii	"R^:\367D\351\312\276\266o\304\372\255\367\276\031\370"
 317      44E9CABE 
 317      B66FC4FA 
 317      ADF7BE19 
 317      F8
 318 00a1 7E68DFF9 		.ascii	"~h\337\371\376^l\274\310\277\335{so\"\305\273\363\314"
 318      FE5E6CBC 
 318      C8BFDD7B 
 318      736F22C5 
 318      BBF3CC
 319 00b4 FE127FC9 		.ascii	"\376\022\177\311\375$5"
 319      FD2435
 320              		.text
 321              		.section	.gnu.lto_.decls.91bc8410,"",%progbits
 322 0000 789CAD95 		.ascii	"x\234\255\225kL\\E\024\307\357\334)t\271\\\036\211-"
 322      6B4C5C45 
 322      14C7EFDC 
 322      2974B95C 
 322      1E892D
 323 0013 18629A25 		.ascii	"\030b\232%MHM\010\306\326\030\277\030M\371\320\022\265"
 323      4D484D08 
 323      C6D618BF 
 323      184DF9D0 
 323      12B5
 324 0025 2140D544 		.ascii	"!@\325D\014!\260*I\013\315\356b\254\237\206]\022hm\032"
 324      0C21B02A 
ARM GAS  C:\Users\victo\AppData\Local\Temp\ccVe2IoV.s 			page 26


 324      490BCDEE 
 324      62AC9F86 
 324      5D12686D 
 325 003a 82451E2A 		.ascii	"\202E\036*\217\260R\250<\313C\027\266-Oyl)\320\027K"
 325      8FB052A8 
 325      3CCB4317 
 325      B62D4F79 
 325      6C29D017 
 326 004f CB1B1A35 		.ascii	"\313\033\0325X\004[i\221\312z\356\314dw/\333\246|\360"
 326      58045B69 
 326      91CA7AEE 
 326      CC64772F 
 326      DBA67CF0 
 327 0063 26FFDD9D 		.ascii	"&\377\335\235\271g~\347\374\317\235;\213\005Ax\010r"
 327      B9677EE7 
 327      FCCF9D3B 
 327      8B054178 
 327      0872
 328 0075 C2256A04 		.ascii	"\302%j\004a\012\011\202\010\343X\301}\301\224P\013\362"
 328      610A0982 
 328      08E358C1 
 328      7DC19450 
 328      0BF2
 329 0087 07B5806C 		.ascii	"\007\265\200l\240^\320U\3205\320(\350\006\350\026h\034"
 329      A05ED055 
 329      D035D028 
 329      E806E816 
 329      681C
 330 0099 3401BA2B 		.ascii	"4\001\272+\250/e\375.\316\015\004\311\240A\220\026\024"
 330      A82F65FD 
 330      2ECE0D04 
 330      C9A04190 
 330      1614
 331 00ab 0E6A0485 		.ascii	"\016j\004\205\200\306@\223\240&P\015h\0264\003j\007"
 331      80C64093 
 331      A026500D 
 331      68163403 
 331      6A07
 332 00bd CD81BA41 		.ascii	"\315\201\272A\363\240!\320\302\377X\337\252\210\354"
 332      F3A021D0 
 332      C2FF58DF 
 332      AA88EC
 333 00cc F38F1FC8 		.ascii	"\363\217\037\310\277\211(P\012V\206%\343\367\036b\030"
 333      BF892850 
 333      0A568625 
 333      E3F71E62 
 333      18
 334 00dd CA92A80C 		.ascii	"\312\222\250\014\333\326\327\032|C\013\210r\231I\260"
 334      DBD6D71A 
 334      7C430B88 
 334      729949B0 
 335 00ed 886243D0 		.ascii	"\210bC\320y\024\206\252Q\030TP\203B\341\363\243\035"
 335      791486AA 
 335      51185450 
 335      8342E1F3 
 335      A31D
 336 00ff 8C54D555 		.ascii	"\214T\325U\274\354\207E\244\374\256,\232\273)E^\200"
ARM GAS  C:\Users\victo\AppData\Local\Temp\ccVe2IoV.s 			page 27


 336      BCEC8745 
 336      A4FCAE2C 
 336      9ABB2945 
 336      5E80
 337 0111 55B9A4D3 		.ascii	"U\271\244\323!\272\323Yl}v\215\266\224\2247\256\264"
 337      21BAD359 
 337      6C7D768D 
 337      B6949437 
 337      AEB4
 338 0123 97F4C9A4 		.ascii	"\227\364\311\244\232t:\235oQ\024\272\2000\372\021ER"
 338      9A743A9D 
 338      6F5114BA 
 338      8030FA11 
 338      4552
 339 0135 73F09BB9 		.ascii	"s\360\233\271\254EZXf\255\1778\354O\253\324*\224\366"
 339      AC455A58 
 339      66AD7F38 
 339      EC4FABD4 
 339      2A94F6
 340 0148 FC81225F 		.ascii	"\374\201\"_Z\345\016eh\035h\235G\370\020\315<9\3301"
 340      5AE50E65 
 340      681D689D 
 340      47F810CD 
 340      3C39D831 
 341 015c 2EC9A709 		.ascii	".\311\247\0111\221<3\361;L\311uPr=-\271\021\311<\307"
 341      31913C33 
 341      F13B4CC9 
 341      7550723D 
 341      2DB911C9 
 342 0172 AA288ED6 		.ascii	"\252(\216\326O\333|\221\034\361\214ht\021Ex,\260\200"
 342      4FDB7C91 
 342      1CF18C68 
 342      74114578 
 342      2CB080
 343 0185 9B955AF3 		.ascii	"\233\225Z\363\222\\G\210\0065\301|\203\253`%\314\345"
 343      925C4788 
 343      0635C17C 
 343      83AB6025 
 343      CCE5
 344 0197 D1F4755F 		.ascii	"\321\364u_n\020\376\234\226\323Re*\023\367V\220r\323"
 344      6E10FE9C 
 344      96D35265 
 344      2A13F756 
 344      9072D3
 345 01aa 4A4DDFF4 		.ascii	"JM\337\364K\305\244\302d\"\340\030Q@3\003x\324\327\314"
 345      4BC5A4C2 
 345      6422E018 
 345      51403303 
 345      78D4D7CC 
 346 01be 7CA316B4 		.ascii	"|\243\026\264\027VgUu\234\331\011>C$\012>k/\351\302"
 346      17566755 
 346      759CD909 
 346      3E43240A 
 346      3E6B2FE9 
 347 01d3 74E8A4F0 		.ascii	"t\350\244\360\333Wrr4\270\035)\003qb\342\334:FRD\256"
 347      DB577272 
 347      34B81D29 
ARM GAS  C:\Users\victo\AppData\Local\Temp\ccVe2IoV.s 			page 28


 347      037162E2 
 347      DC3A4652 
 348 01e9 6266259F 		.ascii	"bf%\237\340\027\005\024\031\206^\006\037V\360\021\""
 348      E0170514 
 348      19865E06 
 348      1F56F011 
 348      22
 349 01fa D152512B 		.ascii	"\321RQ+\244j\203T\212\233\306Zs=&d\007\372\031I\350"
 349      A46A8354 
 349      8A9BC65A 
 349      733D2664 
 349      07FA1949 
 350 020f 27B71925 		.ascii	"'\267\031%\035\367\322\272v\332\032 \345*O\377\371L"
 350      1DF7D2BA 
 350      76DA1A20 
 350      E52A4FFF 
 350      F94C
 351 0221 881F592D 		.ascii	"\210\037Y-\273%\341NZ\022\262\026\214\337\017\002\363"
 351      BB25E14E 
 351      5A12B216 
 351      8CDF0F02 
 351      F3
 352 0232 16F34AD9 		.ascii	"\026\363J\331\371\221\320B2G\270\371vH\330\301\3153"
 352      F991D042 
 352      3247B8F9 
 352      7648D8C1 
 352      CD33
 353 0244 A0A08CA9 		.ascii	"\240\240\214\251u\233\312\272\226Y/\\z\334\242\241C"
 353      759BCABA 
 353      96592F5C 
 353      7ADCA2A1 
 353      43
 354 0255 A7132B13 		.ascii	"\247\023+\023\337\377\265l\363\303O\230\367\252\321"
 354      DFFFB56C 
 354      F3C34F98 
 354      F7AAD1
 355 0264 47258128 		.ascii	"G%\201(Bb\217\250\262\376\0353y\033uA\216+nSZn\212\366"
 355      42628FA8 
 355      B2FE1D33 
 355      791B7541 
 355      8E2B6E53 
 356 027c 07ECF8EC 		.ascii	"\007\354\370\354\023\\[\031u\202\033-ws\011&/37\275"
 356      135C5B19 
 356      75821B2D 
 356      77730926 
 356      2F3337BD 
 357 0290 8E6F8665 		.ascii	"\216o\206e\346~\233+\316N\015\275\211\315\354%\260d"
 357      E67E9B2B 
 357      CE4E0DBD 
 357      89CDEC25 
 357      B064
 358 02a2 592F0770 		.ascii	"Y/\007p\3739%{\212HE\026\267\337\015\245\365p\373\356"
 358      FB39257B 
 358      8A484516 
 358      B7DF0DA5 
 358      F570FBEE 
 359 02b6 D7A98737 		.ascii	"\327\251\2077\240W\325\200p\326\200\231o\327-~t\250"
ARM GAS  C:\Users\victo\AppData\Local\Temp\ccVe2IoV.s 			page 29


 359      A057D580 
 359      70D68099 
 359      6FD72D7E 
 359      74A8
 360 02c8 1C5A41CA 		.ascii	"\034ZA\312\324\234c\334\266\023\027\322d\342\375s&\247"
 360      D49C63DC 
 360      B61317D2 
 360      64E2FD73 
 360      26A7
 361 02da BFAB053D 		.ascii	"\277\253\005=\254\005\203\220\247\337\335\202p\317\026"
 361      AC058390 
 361      A7DFDD82 
 361      70CF16
 362 02e9 D0FD2EB8 		.ascii	"\320\375.\2707\373\000\030\012\347\206\372`\362\027"
 362      37FB0018 
 362      0AE786FA 
 362      60F217
 363 02f8 66C85A30 		.ascii	"f\310Z0\326/\261\026lsEoE\343\272\006\227\262\036\374"
 363      D62FB116 
 363      6C73456F 
 363      45E3BA06 
 363      97B21EFC 
 364 030c FDEBF292 		.ascii	"\375\353\362\222\037\357A\377\364\036\217\375?\004\265"
 364      1FEF41FF 
 364      F41E8FFD 
 364      3F04B5
 365 031b D9BDF6BF 		.ascii	"\331\275\366\277\235\367\340*\355ACG\263Y\304\255\014"
 365      9DF7E02A 
 365      ED414347 
 365      B359C4AD 
 365      0C
 366 032c 955DBDB6 		.ascii	"\225]\275\266\201)\252\374\376Er0;\233l:\235\2143\354"
 366      8129AAFC 
 366      FE457230 
 366      3B9B6C3A 
 366      9D8C33EC 
 367 0340 C519E69C 		.ascii	"\305\031\346\234k\2243Y\273\260)\341\253\214C\206\327"
 367      6B943359 
 367      BBB029E1 
 367      AB8C4386 
 367      D7
 368 0351 1E898CB3 		.ascii	"\036\211\214\263\274\2053\342\305\031\341\234Q\3121"
 368      BC8533E2 
 368      C519E19C 
 368      51CA31
 369 0360 6FF48C04 		.ascii	"o\364\214\004x\036.\312>v\007\217\261C\000\002\363N"
 369      781E2ECA 
 369      3E76078F 
 369      B1430002 
 369      F34E
 370 0372 8DB5C978 		.ascii	"\215\265\311x\221%4\377\373\303\251\000z\006\224\377"
 370      912534FF 
 370      FBC3A900 
 370      7A0694FF 
 371 0382 E19110A2 		.ascii	"\341\221\020\242\321u\257\204\327y\302\0334\341\304"
 371      D175AF84 
 371      D779C21B 
ARM GAS  C:\Users\victo\AppData\Local\Temp\ccVe2IoV.s 			page 30


 371      34E1C4
 372 0391 E877AB1A 		.ascii	"\350w\253\032\374\017\343\224]\232\315`u?\331R\367M"
 372      FC0FE394 
 372      5D9ACD60 
 372      753FD952 
 372      F74D
 373 03a3 2FCC4D8E 		.ascii	"/\314M\216\271E1\205\177\256~\214\0130\245,5\235\351"
 373      B9453185 
 373      7FAE7E8C 
 373      0B30A52C 
 373      359DE9
 374 03b6 420CB3B1 		.ascii	"B\014\263\261\005s\333\013s\233c\306)f\371rv\216\017"
 374      0573DB0B 
 374      739B63C6 
 374      2966F972 
 374      768E0F
 375 03c9 AE639C45 		.ascii	"\256c\234E\373\232%\210\271Z\337\342\312\341\305qp\316"
 375      FB9A2588 
 375      B95ADFE2 
 375      CAE1C571 
 375      70CE
 376 03db 04E5D84C 		.ascii	"\004\345\330L\344\201?\356a\234\353\245\233\227\330"
 376      E4813FEE 
 376      619CEBA5 
 376      9B97D8
 377 03ea 639DFDFD 		.ascii	"c\235\375\375qbw\026\347(\235\275\263\345\204\270\303"
 377      71627716 
 377      E7289DBD 
 377      B3E584B8 
 377      C3
 378 03fb 29772965 		.ascii	")w)e\335\321>+z>\014\345Du\247\234d\017C\371\206\340"
 378      DDD13E2B 
 378      7A3E0CE5 
 378      4475A79C 
 378      640F43F9 
 379 0411 DCFCB625 		.ascii	"\334\374\266%\037\354\240)\305\316\346\274\015\331\365"
 379      1FECA029 
 379      C5CEE6BC 
 379      0DD9F5
 380 0420 AE9817E4 		.ascii	"\256\230\027\344A\345D\237\201\214S\356\227\005\032"
 380      41E5449F 
 380      818C53EE 
 380      97051A
 381 042f E27A5BBC 		.ascii	"\342z[\274\367\376\364\323\367\376\275\305\262\015_"
 381      F7FEF4D3 
 381      F7FEBDC5 
 381      B20D5F
 382 043e CF9A6654 		.ascii	"\317\232fT\033d\226\3274Kk\262\234\252\317\227=\203"
 382      1B6496D7 
 382      344B6BB2 
 382      9CAACF97 
 382      3D83
 383 0450 BB55C173 		.ascii	"\273U\301s<x\216\006\027on\024\252\334\016\251\202\347"
 383      3C788E06 
 383      176F6E14 
 383      AADC0EA9 
 383      82E7
ARM GAS  C:\Users\victo\AppData\Local\Temp\ccVe2IoV.s 			page 31


 384 0462 79F03C0D 		.ascii	"y\360<\015\256\264}eV\375\011\216\251Z\263\300\203\225"
 384      AEB47D65 
 384      56FD098E 
 384      A95AB3C0 
 384      8395
 385 0474 EFE0F78E 		.ascii	"\357\340\367\216~\230\024\235\020\367nR\314\376\350"
 385      7E98149D 
 385      10F76E52 
 385      CCFEE8
 386 0483 A498F838 		.ascii	"\244\230\3708\337CG\216j\243\205\310\250\304C\272t\235"
 386      DF43478E 
 386      6AA385C8 
 386      A8C443BA 
 386      749D
 387 0495 3ED9A84B 		.ascii	">\331\250KM\212\317\310\324\247\350\022c\3433\242_K"
 387      4D8ACFC8 
 387      D4A7E812 
 387      63E333A2 
 387      5F4B
 388 04a7 542F3892 		.ascii	"T/8\222\020\225\"\310)'\323\014\372\344\324T\275\316"
 388      109522C8 
 388      2927D30C 
 388      FAE4D454 
 388      BDCE
 389 04b9 60087FFA 		.ascii	"`\010\177\372\272WRN\032O\236\320\031\242>\023\302\\"
 389      BA57524E 
 389      1A4F9ED0 
 389      19A23E13 
 389      C25C
 390 04cb 88944C83 		.ascii	"\210\224L\2031\343xL\272Q\17789=\365\230N\277\357\371"
 390      31E3784C 
 390      BA517F38 
 390      393DF598 
 390      4EBFEFF9 
 391 04df 6963DF4F 		.ascii	"ic\337O\000\206OfZ\272\361\215@\327\254\301\010K\266"
 391      00864F66 
 391      5ABAF18D 
 391      40D7ACC1 
 391      084BB6
 392 04f2 593423F8 		.ascii	"Y4#\370*\204W_\177\301u\353\270\301\250\217\007L\246"
 392      2A84575F 
 392      7FC175EB 
 392      B8C1A88F 
 392      074CA6
 393 0505 81DE3AB0 		.ascii	"\201\336:\260?Du\353\003\375\301\314O\342\323\276\324"
 393      3F4475EB 
 393      03FDC1CC 
 393      4FE2D3BE 
 393      D4
 394 0516 A9A7E352 		.ascii	"\251\247\343R\371t\250\367tLz\252\356\213\335\336\363"
 394      F974A8F7 
 394      744C7AAA 
 394      EE8BDDDE 
 394      F3
 395 0527 B1467D98 		.ascii	"\261F}\2307\233F'\034?\021\372\214[\273\275\347\001"
 395      379B4627 
 395      1C3F11FA 
ARM GAS  C:\Users\victo\AppData\Local\Temp\ccVe2IoV.s 			page 32


 395      8C5BBBBD 
 395      E701
 396 0539 B44B351B 		.ascii	"\264K5\033\235\001\275\3148\346\243\327}z`\377\1773"
 396      9D01BDCC 
 396      38E6A3D7 
 396      7D7A60FF 
 396      7F33
 397 054b 4D469E   		.ascii	"MF\236"
 398              		.text
 399              		.section	.gnu.lto_.symtab.91bc8410,"",%progbits
 400 0000 4D55585F 		.ascii	"MUX_CTRL_I2C_ISR\000\000\000\000\000\000\000\000\000"
 400      4354524C 
 400      5F493243 
 400      5F495352 
 400      00000000 
 401 0019 000000AC 		.ascii	"\000\000\000\254\000\000\000MUX_CTRL_customIntrHand"
 401      0000004D 
 401      55585F43 
 401      54524C5F 
 401      63757374 
 402 0037 6C657200 		.ascii	"ler\000\000\002\000\000\000\000\000\000\000\000\000"
 402      00020000 
 402      00000000 
 402      000000
 403 0046 B4000000 		.ascii	"\264\000\000\000MUX_CTRL_state\000\000\002\000\000\000"
 403      4D55585F 
 403      4354524C 
 403      5F737461 
 403      74650000 
 404 005e 00000000 		.ascii	"\000\000\000\000\000\000\274\000\000\000MUX_CTRL_ms"
 404      0000BC00 
 404      00004D55 
 404      585F4354 
 404      524C5F6D 
 405 0073 74725374 		.ascii	"trStatus\000\000\002\000\000\000\000\000\000\000\000"
 405      61747573 
 405      00000200 
 405      00000000 
 405      000000
 406 0086 00C40000 		.ascii	"\000\304\000\000\000MUX_CTRL_mstrWrBufSize\000\000\002"
 406      004D5558 
 406      5F435452 
 406      4C5F6D73 
 406      74725772 
 407 00a4 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\314\000\000\000"
 407      00000000 
 407      00CC0000 
 407      00
 408 00b1 4D55585F 		.ascii	"MUX_CTRL_mstrRdBufSize\000\000\002\000\000\000\000\000"
 408      4354524C 
 408      5F6D7374 
 408      72526442 
 408      75665369 
 409 00cf 00000000 		.ascii	"\000\000\000\000\316\000\000\000MUX_CTRL_mstrRdBufI"
 409      CE000000 
 409      4D55585F 
 409      4354524C 
ARM GAS  C:\Users\victo\AppData\Local\Temp\ccVe2IoV.s 			page 33


 409      5F6D7374 
 410 00ea 6E646578 		.ascii	"ndex\000\000\002\000\000\000\000\000\000\000\000\000"
 410      00000200 
 410      00000000 
 410      00000000 
 411 00fa D0000000 		.ascii	"\320\000\000\000MUX_CTRL_mstrRdBufPtr\000\000\002\000"
 411      4D55585F 
 411      4354524C 
 411      5F6D7374 
 411      72526442 
 412 0117 00000000 		.ascii	"\000\000\000\000\000\000\000\000\323\000\000\000MUX"
 412      00000000 
 412      D3000000 
 412      4D5558
 413 0126 5F435452 		.ascii	"_CTRL_mstrWrBufIndexTmp\000\000\002\000\000\000\000"
 413      4C5F6D73 
 413      74725772 
 413      42756649 
 413      6E646578 
 414 0144 00000000 		.ascii	"\000\000\000\000\000\325\000\000\000MUX_CTRL_mstrWr"
 414      00D50000 
 414      004D5558 
 414      5F435452 
 414      4C5F6D73 
 415 015c 42756649 		.ascii	"BufIndex\000\000\002\000\000\000\000\000\000\000\000"
 415      6E646578 
 415      00000200 
 415      00000000 
 415      000000
 416 016f 00D70000 		.ascii	"\000\327\000\000\000MUX_CTRL_mstrWrBufPtr\000\000\002"
 416      004D5558 
 416      5F435452 
 416      4C5F6D73 
 416      74725772 
 417 018c 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\331\000\000\000"
 417      00000000 
 417      00D90000 
 417      00
 418 0199 4D55585F 		.ascii	"MUX_CTRL_mstrControl\000\000\002\000\000\000\000\000"
 418      4354524C 
 418      5F6D7374 
 418      72436F6E 
 418      74726F6C 
 419 01b5 00000000 		.ascii	"\000\000\000\000\333\000\000\000"
 419      DB000000 
 420              		.text
 421              		.section	.gnu.lto_.opts,"",%progbits
 422 0000 272D666E 		.ascii	"'-fno-trapv' '-mcpu=cortex-m0' '-mthumb' '-g' '-Os'"
 422      6F2D7472 
 422      61707627 
 422      20272D6D 
 422      6370753D 
 423 0033 20272D57 		.ascii	" '-Werror' '-ffunction-sections' '-finline-function"
 423      6572726F 
 423      72272027 
 423      2D666675 
 423      6E637469 
ARM GAS  C:\Users\victo\AppData\Local\Temp\ccVe2IoV.s 			page 34


 424 0066 73272027 		.ascii	"s' '-flto' '-ffat-lto-objects' '-fno-strict-aliasin"
 424      2D666C74 
 424      6F272027 
 424      2D666661 
 424      742D6C74 
 425 0099 672700   		.ascii	"g'\000"
 426              		.text
 427              		.cfi_sections	.debug_frame
 428              		.section	.text.MUX_CTRL_I2C_ISR,"ax",%progbits
 429              		.align	1
 430              		.global	MUX_CTRL_I2C_ISR
 431              		.code	16
 432              		.thumb_func
 433              		.type	MUX_CTRL_I2C_ISR, %function
 434              	MUX_CTRL_I2C_ISR:
 435              	.LFB0:
 436              		.file 1 ".\\Generated_Source\\PSoC4\\MUX_CTRL_I2C_INT.c"
   1:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** * File Name: MUX_CTRL_I2C_INT.c
   3:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** * Version 3.10
   4:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** *
   5:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** * Description:
   6:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** *  This file provides the source code to the Interrupt Service Routine for
   7:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** *  the SCB Component in I2C mode.
   8:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** *
   9:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** * Note:
  10:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** *
  11:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** ********************************************************************************
  12:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** * Copyright 2013-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
  18:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** #include "MUX_CTRL_PVT.h"
  19:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** #include "MUX_CTRL_I2C_PVT.h"
  20:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** #include "cyapicallbacks.h"
  21:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
  22:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
  23:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** /*******************************************************************************
  24:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** * Function Name: MUX_CTRL_I2C_ISR
  25:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** ********************************************************************************
  26:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** *
  27:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** * Summary:
  28:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** *  Handles the Interrupt Service Routine for the SCB I2C mode.
  29:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** *
  30:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** * Parameters:
  31:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** *  None
  32:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** *
  33:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** * Return:
  34:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** *  None
  35:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** *
  36:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** *******************************************************************************/
  37:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** CY_ISR(MUX_CTRL_I2C_ISR)
  38:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** {
 437              		.loc 1 38 0
 438              		.cfi_startproc
ARM GAS  C:\Users\victo\AppData\Local\Temp\ccVe2IoV.s 			page 35


 439              	.LVL0:
 440 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 441              		.cfi_def_cfa_offset 24
 442              		.cfi_offset 3, -24
 443              		.cfi_offset 4, -20
 444              		.cfi_offset 5, -16
 445              		.cfi_offset 6, -12
 446              		.cfi_offset 7, -8
 447              		.cfi_offset 14, -4
  39:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****     uint32 diffCount;
  40:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****     uint32 endTransfer;
  41:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
  42:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** #ifdef MUX_CTRL_I2C_ISR_ENTRY_CALLBACK
  43:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****     MUX_CTRL_I2C_ISR_EntryCallback();
  44:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** #endif /* MUX_CTRL_I2C_ISR_ENTRY_CALLBACK */
  45:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****     
  46:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** #if (MUX_CTRL_I2C_CUSTOM_ADDRESS_HANDLER_CONST)
  47:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****     uint32 response;
  48:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
  49:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****     response = MUX_CTRL_I2C_ACK_ADDR;
  50:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** #endif /* (MUX_CTRL_I2C_CUSTOM_ADDRESS_HANDLER_CONST) */
  51:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
  52:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****     endTransfer = 0u; /* Continue active transfer */
  53:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
  54:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****     /* Calls customer routine if registered */
  55:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****     if(NULL != MUX_CTRL_customIntrHandler)
 448              		.loc 1 55 0
 449 0002 A64B     		ldr	r3, .L74
 450 0004 1B68     		ldr	r3, [r3]
 451 0006 002B     		cmp	r3, #0
 452 0008 00D0     		beq	.L2
  56:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****     {
  57:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****         MUX_CTRL_customIntrHandler();
 453              		.loc 1 57 0
 454 000a 9847     		blx	r3
 455              	.LVL1:
 456              	.L2:
  58:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****     }
  59:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
  60:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****     if(MUX_CTRL_CHECK_INTR_I2C_EC_MASKED(MUX_CTRL_INTR_I2C_EC_WAKE_UP))
 457              		.loc 1 60 0
 458 000c A44B     		ldr	r3, .L74+4
 459 000e 1B68     		ldr	r3, [r3]
 460 0010 DB07     		lsl	r3, r3, #31
 461 0012 02D5     		bpl	.L3
  61:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****     {
  62:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****         /* Mask-off after wakeup */
  63:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****         MUX_CTRL_SetI2CExtClkInterruptMode(MUX_CTRL_NO_INTR_SOURCES);
 462              		.loc 1 63 0
 463 0014 0022     		mov	r2, #0
 464 0016 A34B     		ldr	r3, .L74+8
 465 0018 1A60     		str	r2, [r3]
 466              	.L3:
  64:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****     }
  65:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
  66:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****     /* Master and Slave error tracking:
  67:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****     * Add the master state check to track only the master errors when the master is active or
ARM GAS  C:\Users\victo\AppData\Local\Temp\ccVe2IoV.s 			page 36


  68:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****     * track slave errors when the slave is active or idle.
  69:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****     * A special MMS case: in the address phase with misplaced Start: the master sets the LOST_ARB a
  70:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****     * slave BUS_ERR. The valid event is LOST_ARB comes from the master.
  71:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****     */
  72:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****     if(MUX_CTRL_CHECK_I2C_FSM_MASTER)
 467              		.loc 1 72 0
 468 001a A34B     		ldr	r3, .L74+12
 469 001c 1A78     		ldrb	r2, [r3]
 470 001e 9206     		lsl	r2, r2, #26
 471 0020 01D4     		bmi	.L4
 472              	.LVL2:
 473              	.L9:
  52:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
 474              		.loc 1 52 0
 475 0022 0021     		mov	r1, #0
 476 0024 23E0     		b	.L5
 477              	.LVL3:
 478              	.L4:
  73:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****     {
  74:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****         #if(MUX_CTRL_I2C_MASTER)
  75:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****         {
  76:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****             /* INTR_MASTER_I2C_BUS_ERROR:
  77:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****             * A misplaced Start or Stop condition occurred on the bus: complete the transaction.
  78:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****             * The interrupt is cleared in I2C_FSM_EXIT_IDLE.
  79:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****             */
  80:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****             if(MUX_CTRL_CHECK_INTR_MASTER_MASKED(MUX_CTRL_INTR_MASTER_I2C_BUS_ERROR))
 479              		.loc 1 80 0
 480 0026 A14A     		ldr	r2, .L74+16
  52:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
 481              		.loc 1 52 0
 482 0028 0021     		mov	r1, #0
 483              		.loc 1 80 0
 484 002a 1068     		ldr	r0, [r2]
 485 002c C005     		lsl	r0, r0, #23
 486 002e 06D5     		bpl	.L6
  81:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****             {
  82:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 MUX_CTRL_mstrStatus |= (uint16) (MUX_CTRL_I2C_MSTAT_ERR_XFER |
 487              		.loc 1 82 0
 488 0030 C024     		mov	r4, #192
 489 0032 9F48     		ldr	r0, .L74+20
 490 0034 A400     		lsl	r4, r4, #2
 491 0036 0188     		ldrh	r1, [r0]
 492 0038 2143     		orr	r1, r4
 493 003a 0180     		strh	r1, [r0]
 494              	.LVL4:
  83:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                                                          MUX_CTRL_I2C_MSTAT_ERR_BUS_ERROR);
  84:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
  85:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 endTransfer = MUX_CTRL_I2C_CMPLT_ANY_TRANSFER;
 495              		.loc 1 85 0
 496 003c 0121     		mov	r1, #1
 497              	.LVL5:
 498              	.L6:
  86:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****             }
  87:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
  88:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****             /* INTR_MASTER_I2C_ARB_LOST:
  89:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****             * The MultiMaster lost arbitrage during transaction.
  90:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****             * A Misplaced Start or Stop condition is treated as lost arbitration when the master dr
ARM GAS  C:\Users\victo\AppData\Local\Temp\ccVe2IoV.s 			page 37


  91:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****             * The interrupt source is cleared in I2C_FSM_EXIT_IDLE.
  92:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****             */
  93:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****             if(MUX_CTRL_CHECK_INTR_MASTER_MASKED(MUX_CTRL_INTR_MASTER_I2C_ARB_LOST))
 499              		.loc 1 93 0
 500 003e 1268     		ldr	r2, [r2]
 501 0040 D207     		lsl	r2, r2, #31
 502 0042 06D5     		bpl	.L7
  94:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****             {
  95:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 MUX_CTRL_mstrStatus |= (uint16) (MUX_CTRL_I2C_MSTAT_ERR_XFER |
 503              		.loc 1 95 0
 504 0044 9020     		mov	r0, #144
 505 0046 9A49     		ldr	r1, .L74+20
 506              	.LVL6:
 507 0048 8000     		lsl	r0, r0, #2
 508 004a 0A88     		ldrh	r2, [r1]
 509 004c 0243     		orr	r2, r0
 510 004e 0A80     		strh	r2, [r1]
 511              	.LVL7:
 512 0050 01E0     		b	.L8
 513              	.LVL8:
 514              	.L7:
  96:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                                                          MUX_CTRL_I2C_MSTAT_ERR_ARB_LOST);
  97:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
  98:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 endTransfer = MUX_CTRL_I2C_CMPLT_ANY_TRANSFER;
  99:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****             }
 100:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
 101:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****             #if(MUX_CTRL_I2C_MULTI_MASTER_SLAVE)
 102:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****             {
 103:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 /* I2C_MASTER_CMD_M_START_ON_IDLE:
 104:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 * MultiMaster-Slave does not generate start, because Slave was addressed.
 105:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 * Pass control to slave.
 106:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 */
 107:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 if(MUX_CTRL_CHECK_I2C_MASTER_CMD(MUX_CTRL_I2C_MASTER_CMD_M_START_ON_IDLE))
 108:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 {
 109:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     MUX_CTRL_mstrStatus |= (uint16) (MUX_CTRL_I2C_MSTAT_ERR_XFER |
 110:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                                                              MUX_CTRL_I2C_MSTAT_ERR_ABORT_XFER);
 111:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
 112:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     endTransfer = MUX_CTRL_I2C_CMPLT_ANY_TRANSFER;
 113:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 }
 114:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****             }
 115:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****             #endif
 116:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
 117:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****             /* The error handling common part:
 118:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****             * Sets a completion flag of the master transaction and passes control to:
 119:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****             *  - I2C_FSM_EXIT_IDLE - to complete transaction in case of: ARB_LOST or BUS_ERR.
 120:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****             *  - I2C_FSM_IDLE      - to take chance for the slave to process incoming transaction.
 121:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****             */
 122:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****             if(0u != endTransfer)
 515              		.loc 1 122 0
 516 0052 0029     		cmp	r1, #0
 517 0054 E5D0     		beq	.L9
 518              	.LVL9:
 519              	.L8:
 123:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****             {
 124:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 /* Set completion flags for master */
 125:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 MUX_CTRL_mstrStatus |= (uint16) MUX_CTRL_GET_I2C_MSTAT_CMPLT;
 520              		.loc 1 125 0
ARM GAS  C:\Users\victo\AppData\Local\Temp\ccVe2IoV.s 			page 38


 521 0056 0121     		mov	r1, #1
 522 0058 0220     		mov	r0, #2
 523 005a 1A78     		ldrb	r2, [r3]
 524 005c 944C     		ldr	r4, .L74+20
 525 005e 0A40     		and	r2, r1
 526 0060 821A     		sub	r2, r0, r2
 527 0062 2088     		ldrh	r0, [r4]
 528 0064 0243     		orr	r2, r0
 529 0066 92B2     		uxth	r2, r2
 530 0068 2280     		strh	r2, [r4]
 126:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
 127:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 #if(MUX_CTRL_I2C_MULTI_MASTER_SLAVE)
 128:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 {
 129:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     if(MUX_CTRL_CHECK_I2C_FSM_ADDR)
 130:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     {
 131:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         /* Start generation is set after another master starts accessing Slave.
 132:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         * Clean-up master and turn to slave. Set state to IDLE.
 133:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         */
 134:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         if(MUX_CTRL_CHECK_I2C_MASTER_CMD(MUX_CTRL_I2C_MASTER_CMD_M_START_ON_IDLE))
 135:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         {
 136:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                             MUX_CTRL_I2C_MASTER_CLEAR_START;
 137:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
 138:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                             endTransfer = MUX_CTRL_I2C_CMPLT_ANY_TRANSFER; /* Pass control to Slave
 139:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         }
 140:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         /* Valid arbitration lost on the address phase happens only when: master LO
 141:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         * slave BUS_ERR is cleared. Only in that case set the state to IDLE without
 142:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         */
 143:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         else if((!MUX_CTRL_CHECK_INTR_SLAVE_MASKED(MUX_CTRL_INTR_SLAVE_I2C_BUS_ERRO
 144:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                                && MUX_CTRL_CHECK_INTR_MASTER_MASKED(MUX_CTRL_INTR_MASTER_I2C_ARB_LO
 145:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         {
 146:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                             endTransfer = MUX_CTRL_I2C_CMPLT_ANY_TRANSFER; /* Pass control to Slave
 147:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         }
 148:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         else
 149:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         {
 150:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                             endTransfer = 0u; /* Causes I2C_FSM_EXIT_IDLE to be set below */
 151:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         }
 152:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
 153:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         if(0u != endTransfer) /* Clean-up master to proceed with slave */
 154:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         {
 155:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                             MUX_CTRL_CLEAR_TX_FIFO; /* Shifter keeps address, clear it */
 156:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
 157:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                             MUX_CTRL_DISABLE_MASTER_AUTO_DATA_ACK; /* In case of reading disable au
 158:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
 159:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                             /* Clean-up master interrupt sources */
 160:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                             MUX_CTRL_ClearMasterInterruptSource(MUX_CTRL_INTR_MASTER_ALL);
 161:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
 162:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                             /* Disable data processing interrupts: they have to be cleared before *
 163:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                             MUX_CTRL_SetRxInterruptMode(MUX_CTRL_NO_INTR_SOURCES);
 164:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                             MUX_CTRL_SetTxInterruptMode(MUX_CTRL_NO_INTR_SOURCES);
 165:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
 166:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                             MUX_CTRL_state = MUX_CTRL_I2C_FSM_IDLE;
 167:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         }
 168:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         else
 169:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         {
 170:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                             /* Set I2C_FSM_EXIT_IDLE for BUS_ERR and ARB_LOST (that is really bus e
 171:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                             MUX_CTRL_state = MUX_CTRL_I2C_FSM_EXIT_IDLE;
 172:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         }
ARM GAS  C:\Users\victo\AppData\Local\Temp\ccVe2IoV.s 			page 39


 173:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     }
 174:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     else
 175:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     {
 176:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         /* Set I2C_FSM_EXIT_IDLE if any other state than address */
 177:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         MUX_CTRL_state = MUX_CTRL_I2C_FSM_EXIT_IDLE;
 178:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     }
 179:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 }
 180:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 #else
 181:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 {
 182:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     /* In case of LOST*/
 183:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     MUX_CTRL_state = MUX_CTRL_I2C_FSM_EXIT_IDLE;
 531              		.loc 1 183 0
 532 006a 0022     		mov	r2, #0
 533 006c 1A70     		strb	r2, [r3]
 534              	.L5:
 535              	.LVL10:
 184:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 }
 185:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 #endif
 186:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****             }
 187:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****         }
 188:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****         #endif
 189:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****     }
 190:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****     else /* (MUX_CTRL_CHECK_I2C_FSM_SLAVE) */
 191:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****     {
 192:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****         #if(MUX_CTRL_I2C_SLAVE)
 193:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****         {
 194:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****             /* INTR_SLAVE_I2C_BUS_ERROR or MUX_CTRL_INTR_SLAVE_I2C_ARB_LOST:
 195:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****             * A Misplaced Start or Stop condition occurred on the bus: set a flag
 196:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****             * to notify an error condition.
 197:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****             */
 198:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****             if(MUX_CTRL_CHECK_INTR_SLAVE_MASKED(MUX_CTRL_INTR_SLAVE_I2C_BUS_ERROR |
 199:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                                                         MUX_CTRL_INTR_SLAVE_I2C_ARB_LOST))
 200:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****             {
 201:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 if(MUX_CTRL_CHECK_I2C_FSM_RD)
 202:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 {
 203:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     /* TX direction: master reads from slave */
 204:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     MUX_CTRL_slStatus &= (uint8) ~MUX_CTRL_I2C_SSTAT_RD_BUSY;
 205:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     MUX_CTRL_slStatus |= (uint8) (MUX_CTRL_I2C_SSTAT_RD_ERR |
 206:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                                                           MUX_CTRL_I2C_SSTAT_RD_CMPLT);
 207:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 }
 208:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 else
 209:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 {
 210:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     /* RX direction: master writes into slave */
 211:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     MUX_CTRL_slStatus &= (uint8) ~MUX_CTRL_I2C_SSTAT_WR_BUSY;
 212:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     MUX_CTRL_slStatus |= (uint8) (MUX_CTRL_I2C_SSTAT_WR_ERR |
 213:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                                                           MUX_CTRL_I2C_SSTAT_WR_CMPLT);
 214:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 }
 215:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
 216:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 MUX_CTRL_state = MUX_CTRL_I2C_FSM_EXIT_IDLE;
 217:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****             }
 218:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****         }
 219:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****         #endif
 220:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****     }
 221:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
 222:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****     /* States description:
 223:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****     * Any Master operation starts from: the ADDR_RD/WR state as the master generates traffic on the
 224:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****     * Any Slave operation starts from: the IDLE state as the slave always waits for actions from th
ARM GAS  C:\Users\victo\AppData\Local\Temp\ccVe2IoV.s 			page 40


 225:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****     */
 226:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
 227:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****     /* FSM Master */
 228:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****     if(MUX_CTRL_CHECK_I2C_FSM_MASTER)
 536              		.loc 1 228 0
 537 006e 1878     		ldrb	r0, [r3]
 538 0070 1022     		mov	r2, #16
 539 0072 8006     		lsl	r0, r0, #26
 540 0074 00D4     		bmi	.LCB120
 541 0076 F9E0     		b	.L11	@long jump
 542              	.LCB120:
 229:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****     {
 230:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****         #if(MUX_CTRL_I2C_MASTER)
 231:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****         {
 232:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****             /* INTR_MASTER_I2C_STOP:
 233:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****             * A Stop condition was generated by the master: the end of the transaction.
 234:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****             * Set completion flags to notify the API.
 235:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****             */
 236:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****             if(MUX_CTRL_CHECK_INTR_MASTER_MASKED(MUX_CTRL_INTR_MASTER_I2C_STOP))
 543              		.loc 1 236 0
 544 0078 8C4C     		ldr	r4, .L74+16
 545 007a 2068     		ldr	r0, [r4]
 546 007c 1042     		tst	r0, r2
 547 007e 0CD0     		beq	.L12
 237:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****             {
 238:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 MUX_CTRL_ClearMasterInterruptSource(MUX_CTRL_INTR_MASTER_I2C_STOP);
 548              		.loc 1 238 0
 549 0080 8C49     		ldr	r1, .L74+24
 550              	.LVL11:
 239:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
 240:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 MUX_CTRL_mstrStatus |= (uint16) MUX_CTRL_GET_I2C_MSTAT_CMPLT;
 551              		.loc 1 240 0
 552 0082 8B4C     		ldr	r4, .L74+20
 238:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
 553              		.loc 1 238 0
 554 0084 0A60     		str	r2, [r1]
 555              		.loc 1 240 0
 556 0086 0121     		mov	r1, #1
 557 0088 1878     		ldrb	r0, [r3]
 558 008a 0140     		and	r1, r0
 559 008c 0220     		mov	r0, #2
 560 008e 411A     		sub	r1, r0, r1
 561 0090 2088     		ldrh	r0, [r4]
 562 0092 0143     		orr	r1, r0
 563 0094 89B2     		uxth	r1, r1
 564 0096 2180     		strh	r1, [r4]
 565 0098 DDE0     		b	.L71
 566              	.LVL12:
 567              	.L12:
 241:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 MUX_CTRL_state       = MUX_CTRL_I2C_FSM_IDLE;
 242:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****             }
 243:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****             else
 244:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****             {
 245:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 if(MUX_CTRL_CHECK_I2C_FSM_ADDR) /* Address stage */
 568              		.loc 1 245 0
 569 009a 1878     		ldrb	r0, [r3]
 570 009c 0007     		lsl	r0, r0, #28
ARM GAS  C:\Users\victo\AppData\Local\Temp\ccVe2IoV.s 			page 41


 571 009e 1BD5     		bpl	.L15
 246:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 {
 247:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     /* INTR_MASTER_I2C_NACK:
 248:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     * The master sent an address but it was NACKed by the slave. Complete transacti
 249:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     */
 250:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     if(MUX_CTRL_CHECK_INTR_MASTER_MASKED(MUX_CTRL_INTR_MASTER_I2C_NACK))
 572              		.loc 1 250 0
 573 00a0 0220     		mov	r0, #2
 574 00a2 2568     		ldr	r5, [r4]
 575 00a4 0542     		tst	r5, r0
 576 00a6 09D0     		beq	.L16
 251:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     {
 252:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         MUX_CTRL_ClearMasterInterruptSource(MUX_CTRL_INTR_MASTER_I2C_NACK);
 577              		.loc 1 252 0
 578 00a8 824A     		ldr	r2, .L74+24
 253:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
 254:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         MUX_CTRL_mstrStatus |= (uint16) (MUX_CTRL_I2C_MSTAT_ERR_XFER |
 579              		.loc 1 254 0
 580 00aa 8149     		ldr	r1, .L74+20
 581              	.LVL13:
 252:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
 582              		.loc 1 252 0
 583 00ac 1060     		str	r0, [r2]
 584              		.loc 1 254 0
 585 00ae 8820     		mov	r0, #136
 586 00b0 0A88     		ldrh	r2, [r1]
 587 00b2 8000     		lsl	r0, r0, #2
 588 00b4 0243     		orr	r2, r0
 589 00b6 0A80     		strh	r2, [r1]
 590              	.LVL14:
 255:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                                                                  MUX_CTRL_I2C_MSTAT_ERR_ADDR_NAK);
 256:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
 257:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         endTransfer = MUX_CTRL_I2C_CMPLT_ANY_TRANSFER;
 591              		.loc 1 257 0
 592 00b8 0121     		mov	r1, #1
 593 00ba 0DE0     		b	.L15
 594              	.LVL15:
 595              	.L16:
 258:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     }
 259:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     /* INTR_TX_UNDERFLOW. The master sent an address:
 260:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     *  - TX direction: the clock is stretched after the ACK phase, because the TX F
 261:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     *    EMPTY. The TX EMPTY cleans all the TX interrupt sources.
 262:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     *  - RX direction: the 1st byte is received, but there is no ACK permission,
 263:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     *    the clock is stretched after 1 byte is received.
 264:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     */
 265:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     else
 266:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     {
 267:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         if(MUX_CTRL_CHECK_I2C_FSM_RD) /* Reading */
 596              		.loc 1 267 0
 597 00bc 1878     		ldrb	r0, [r3]
 598 00be C007     		lsl	r0, r0, #31
 599 00c0 02D5     		bpl	.L17
 268:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         {
 269:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                             MUX_CTRL_state = MUX_CTRL_I2C_FSM_MSTR_RD_DATA;
 600              		.loc 1 269 0
 601 00c2 2522     		mov	r2, #37
 602 00c4 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\victo\AppData\Local\Temp\ccVe2IoV.s 			page 42


 603 00c6 07E0     		b	.L15
 604              	.L17:
 270:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         }
 271:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         else /* Writing */
 272:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         {
 273:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                             MUX_CTRL_state = MUX_CTRL_I2C_FSM_MSTR_WR_DATA;
 605              		.loc 1 273 0
 606 00c8 2420     		mov	r0, #36
 607 00ca 1870     		strb	r0, [r3]
 274:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                             if(0u != MUX_CTRL_mstrWrBufSize)
 608              		.loc 1 274 0
 609 00cc 7A48     		ldr	r0, .L74+28
 610 00ce 0068     		ldr	r0, [r0]
 611 00d0 0028     		cmp	r0, #0
 612 00d2 01D0     		beq	.L15
 275:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                             {
 276:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                                 /* Enable INTR.TX_EMPTY if there is data to transmit */
 277:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                                 MUX_CTRL_SetTxInterruptMode(MUX_CTRL_INTR_TX_EMPTY);
 613              		.loc 1 277 0
 614 00d4 7948     		ldr	r0, .L74+32
 615 00d6 0260     		str	r2, [r0]
 616              	.LVL16:
 617              	.L15:
 278:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                             }
 279:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         }
 280:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     }
 281:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 }
 282:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
 283:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 if(MUX_CTRL_CHECK_I2C_FSM_DATA) /* Data phase */
 618              		.loc 1 283 0
 619 00d8 0425     		mov	r5, #4
 620 00da 1A78     		ldrb	r2, [r3]
 621 00dc 2A42     		tst	r2, r5
 622 00de 00D1     		bne	.LCB209
 623 00e0 9EE0     		b	.L18	@long jump
 624              	.LCB209:
 284:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 {
 285:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     if(MUX_CTRL_CHECK_I2C_FSM_RD) /* Reading */
 625              		.loc 1 285 0
 626 00e2 0120     		mov	r0, #1
 627 00e4 1A78     		ldrb	r2, [r3]
 628 00e6 0242     		tst	r2, r0
 629 00e8 43D0     		beq	.L19
 286:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     {
 287:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         /* INTR_RX_FULL:
 288:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         * RX direction: the master received 8 bytes.
 289:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         * Get data from RX FIFO and decide whether to ACK or  NACK the following by
 290:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         */
 291:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         if(MUX_CTRL_CHECK_INTR_RX_MASKED(MUX_CTRL_INTR_RX_FULL))
 630              		.loc 1 291 0
 631 00ea 0826     		mov	r6, #8
 632 00ec 744A     		ldr	r2, .L74+36
 633 00ee 1468     		ldr	r4, [r2]
 634 00f0 3442     		tst	r4, r6
 635 00f2 23D0     		beq	.L20
 292:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         {
 293:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                             /* Calculate difference */
ARM GAS  C:\Users\victo\AppData\Local\Temp\ccVe2IoV.s 			page 43


 294:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                             diffCount =  MUX_CTRL_mstrRdBufSize -
 636              		.loc 1 294 0
 637 00f4 734A     		ldr	r2, .L74+40
 295:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                                         (MUX_CTRL_mstrRdBufIndex + MUX_CTRL_GET_RX_FIFO_ENTRIES);
 638              		.loc 1 295 0
 639 00f6 744C     		ldr	r4, .L74+44
 294:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                                         (MUX_CTRL_mstrRdBufIndex + MUX_CTRL_GET_RX_FIFO_ENTRIES);
 640              		.loc 1 294 0
 641 00f8 1568     		ldr	r5, [r2]
 642              		.loc 1 295 0
 643 00fa 2768     		ldr	r7, [r4]
 644 00fc 734A     		ldr	r2, .L74+48
 645 00fe EF1B     		sub	r7, r5, r7
 646 0100 1F25     		mov	r5, #31
 647 0102 1268     		ldr	r2, [r2]
 648 0104 2A40     		and	r2, r5
 294:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                                         (MUX_CTRL_mstrRdBufIndex + MUX_CTRL_GET_RX_FIFO_ENTRIES);
 649              		.loc 1 294 0
 650 0106 BA1A     		sub	r2, r7, r2
 651              	.LVL17:
 296:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
 297:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                             /* Proceed transaction or end it when RX FIFO becomes FULL again */
 298:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                             if(diffCount > MUX_CTRL_I2C_FIFO_SIZE)
 652              		.loc 1 298 0
 653 0108 B242     		cmp	r2, r6
 654 010a 07D8     		bhi	.L39
 299:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                             {
 300:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                                 diffCount = MUX_CTRL_I2C_FIFO_SIZE;
 301:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                             }
 302:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                             else
 303:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                             {
 304:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                                 if(0u == diffCount)
 655              		.loc 1 304 0
 656 010c 002A     		cmp	r2, #0
 657 010e 06D1     		bne	.L22
 305:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                                 {
 306:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                                     MUX_CTRL_DISABLE_MASTER_AUTO_DATA_ACK;
 658              		.loc 1 306 0
 659 0110 6F49     		ldr	r1, .L74+52
 660              	.LVL18:
 661 0112 704A     		ldr	r2, .L74+56
 662              	.LVL19:
 663 0114 0D68     		ldr	r5, [r1]
 664 0116 2A40     		and	r2, r5
 665 0118 0A60     		str	r2, [r1]
 666              	.LVL20:
 307:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
 308:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                                     diffCount   = MUX_CTRL_I2C_FIFO_SIZE;
 309:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                                     endTransfer = MUX_CTRL_I2C_CMPLT_ANY_TRANSFER;
 667              		.loc 1 309 0
 668 011a 011C     		mov	r1, r0
 669              	.LVL21:
 670              	.L39:
 300:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                             }
 671              		.loc 1 300 0
 672 011c 321C     		mov	r2, r6
 673              	.LVL22:
ARM GAS  C:\Users\victo\AppData\Local\Temp\ccVe2IoV.s 			page 44


 674              	.L22:
 310:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                                 }
 311:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                             }
 312:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
 313:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                             for(; (0u != diffCount); diffCount--)
 314:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                             {
 315:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                                 MUX_CTRL_mstrRdBufPtr[MUX_CTRL_mstrRdBufIndex] = (uint8)
 675              		.loc 1 315 0 discriminator 2
 676 011e 6E4D     		ldr	r5, .L74+60
 677 0120 2068     		ldr	r0, [r4]
 678 0122 2D68     		ldr	r5, [r5]
 313:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                             {
 679              		.loc 1 313 0 discriminator 2
 680 0124 013A     		sub	r2, r2, #1
 681              	.LVL23:
 682              		.loc 1 315 0 discriminator 2
 683 0126 2818     		add	r0, r5, r0
 316:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                                                                                         MUX_CTRL_RX
 684              		.loc 1 316 0 discriminator 2
 685 0128 6C4D     		ldr	r5, .L74+64
 686 012a 2D68     		ldr	r5, [r5]
 315:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                                                                                         MUX_CTRL_RX
 687              		.loc 1 315 0 discriminator 2
 688 012c EDB2     		uxtb	r5, r5
 689 012e 0570     		strb	r5, [r0]
 317:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                                 MUX_CTRL_mstrRdBufIndex++;
 690              		.loc 1 317 0 discriminator 2
 691 0130 2068     		ldr	r0, [r4]
 692 0132 0130     		add	r0, r0, #1
 693 0134 2060     		str	r0, [r4]
 313:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                             {
 694              		.loc 1 313 0 discriminator 2
 695 0136 002A     		cmp	r2, #0
 696 0138 F1D1     		bne	.L22
 697 013a 17E0     		b	.L23
 698              	.LVL24:
 699              	.L20:
 318:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                             }
 319:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         }
 320:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         /* INTR_RX_NOT_EMPTY:
 321:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         * RX direction: the master received one data byte, ACK or NACK it.
 322:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         * The last byte is stored and NACKed by the master. The NACK and Stop is
 323:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         * generated by one command generate Stop.
 324:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         */
 325:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         else if(MUX_CTRL_CHECK_INTR_RX_MASKED(MUX_CTRL_INTR_RX_NOT_EMPTY))
 700              		.loc 1 325 0
 701 013c 1268     		ldr	r2, [r2]
 702 013e 2A42     		tst	r2, r5
 703 0140 14D0     		beq	.L23
 326:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         {
 327:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                             /* Put data in component buffer */
 328:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                             MUX_CTRL_mstrRdBufPtr[MUX_CTRL_mstrRdBufIndex] = (uint8) MUX_CTRL_RX_FI
 704              		.loc 1 328 0
 705 0142 614A     		ldr	r2, .L74+44
 706 0144 644E     		ldr	r6, .L74+60
 707 0146 1468     		ldr	r4, [r2]
 708 0148 3668     		ldr	r6, [r6]
ARM GAS  C:\Users\victo\AppData\Local\Temp\ccVe2IoV.s 			page 45


 709 014a 3419     		add	r4, r6, r4
 710 014c 634E     		ldr	r6, .L74+64
 711 014e 3668     		ldr	r6, [r6]
 712 0150 F6B2     		uxtb	r6, r6
 713 0152 2670     		strb	r6, [r4]
 329:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                             MUX_CTRL_mstrRdBufIndex++;
 714              		.loc 1 329 0
 715 0154 1468     		ldr	r4, [r2]
 716 0156 0134     		add	r4, r4, #1
 717 0158 1460     		str	r4, [r2]
 330:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
 331:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                             if(MUX_CTRL_mstrRdBufIndex < MUX_CTRL_mstrRdBufSize)
 718              		.loc 1 331 0
 719 015a 1468     		ldr	r4, [r2]
 720 015c 594A     		ldr	r2, .L74+40
 721 015e 1268     		ldr	r2, [r2]
 722 0160 9442     		cmp	r4, r2
 723 0162 02D2     		bcs	.L40
 332:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                             {
 333:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                                 MUX_CTRL_I2C_MASTER_GENERATE_ACK;
 724              		.loc 1 333 0
 725 0164 5E4A     		ldr	r2, .L74+68
 726 0166 1560     		str	r5, [r2]
 727 0168 00E0     		b	.L23
 728              	.L40:
 334:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                             }
 335:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                             else
 336:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                             {
 337:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                                endTransfer = MUX_CTRL_I2C_CMPLT_ANY_TRANSFER;
 729              		.loc 1 337 0
 730 016a 011C     		mov	r1, r0
 731              	.LVL25:
 732              	.L23:
 338:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                             }
 339:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         }
 340:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         else
 341:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         {
 342:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                             /* Do nothing */
 343:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         }
 344:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
 345:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         MUX_CTRL_ClearRxInterruptSource(MUX_CTRL_INTR_RX_ALL);
 733              		.loc 1 345 0
 734 016c 5D48     		ldr	r0, .L74+72
 735 016e 5E4A     		ldr	r2, .L74+76
 736 0170 4CE0     		b	.L69
 737              	.L19:
 346:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     }
 347:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     else /* Writing */
 348:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     {
 349:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         /* INTR_MASTER_I2C_NACK :
 350:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         * The master writes data to the slave and NACK was received: not all the by
 351:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         * written to the slave from the TX FIFO. Revert the index if there is data 
 352:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         * the TX FIFO and pass control to a complete transfer.
 353:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         */
 354:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         if(MUX_CTRL_CHECK_INTR_MASTER_MASKED(MUX_CTRL_INTR_MASTER_I2C_NACK))
 738              		.loc 1 354 0
 739 0172 0222     		mov	r2, #2
ARM GAS  C:\Users\victo\AppData\Local\Temp\ccVe2IoV.s 			page 46


 740 0174 2468     		ldr	r4, [r4]
 741 0176 1442     		tst	r4, r2
 742 0178 20D0     		beq	.L24
 355:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         {
 356:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                             MUX_CTRL_ClearMasterInterruptSource(MUX_CTRL_INTR_MASTER_I2C_NACK);
 743              		.loc 1 356 0
 744 017a 4E49     		ldr	r1, .L74+24
 745              	.LVL26:
 357:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
 358:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                             /* Rollback write buffer index: NACKed byte remains in shifter */
 359:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                             MUX_CTRL_mstrWrBufIndexTmp -= (MUX_CTRL_GET_TX_FIFO_ENTRIES +
 746              		.loc 1 359 0
 747 017c 5B4C     		ldr	r4, .L74+80
 356:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
 748              		.loc 1 356 0
 749 017e 0A60     		str	r2, [r1]
 750              		.loc 1 359 0
 751 0180 5B49     		ldr	r1, .L74+84
 752 0182 1D32     		add	r2, r2, #29
 753 0184 0E68     		ldr	r6, [r1]
 360:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                                                                    MUX_CTRL_GET_TX_FIFO_SR_VALID);
 754              		.loc 1 360 0
 755 0186 0D68     		ldr	r5, [r1]
 359:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                                                                    MUX_CTRL_GET_TX_FIFO_SR_VALID);
 756              		.loc 1 359 0
 757 0188 2168     		ldr	r1, [r4]
 758 018a 3240     		and	r2, r6
 759 018c 8A1A     		sub	r2, r1, r2
 760 018e E90B     		lsr	r1, r5, #15
 761 0190 0840     		and	r0, r1
 762 0192 101A     		sub	r0, r2, r0
 763 0194 2060     		str	r0, [r4]
 361:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
 362:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                             /* Update number of transferred bytes */
 363:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                             MUX_CTRL_mstrWrBufIndex = MUX_CTRL_mstrWrBufIndexTmp;
 364:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
 365:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                             MUX_CTRL_mstrStatus |= (uint16) (MUX_CTRL_I2C_MSTAT_ERR_XFER |
 764              		.loc 1 365 0
 765 0196 8420     		mov	r0, #132
 363:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
 766              		.loc 1 363 0
 767 0198 2168     		ldr	r1, [r4]
 768 019a 564A     		ldr	r2, .L74+88
 769              		.loc 1 365 0
 770 019c 8000     		lsl	r0, r0, #2
 363:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
 771              		.loc 1 363 0
 772 019e 1160     		str	r1, [r2]
 773              		.loc 1 365 0
 774 01a0 4349     		ldr	r1, .L74+20
 775 01a2 0A88     		ldrh	r2, [r1]
 776 01a4 0243     		orr	r2, r0
 366:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                                                                      MUX_CTRL_I2C_MSTAT_ERR_SHORT_X
 367:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
 368:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                             MUX_CTRL_CLEAR_TX_FIFO;
 777              		.loc 1 368 0
 778 01a6 8020     		mov	r0, #128
ARM GAS  C:\Users\victo\AppData\Local\Temp\ccVe2IoV.s 			page 47


 365:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                                                                      MUX_CTRL_I2C_MSTAT_ERR_SHORT_X
 779              		.loc 1 365 0
 780 01a8 0A80     		strh	r2, [r1]
 781              		.loc 1 368 0
 782 01aa 534A     		ldr	r2, .L74+92
 783 01ac 4002     		lsl	r0, r0, #9
 784 01ae 1168     		ldr	r1, [r2]
 785 01b0 0143     		orr	r1, r0
 786 01b2 1160     		str	r1, [r2]
 787 01b4 1068     		ldr	r0, [r2]
 788 01b6 5149     		ldr	r1, .L74+96
 789 01b8 0140     		and	r1, r0
 790 01ba 2FE0     		b	.L70
 791              	.LVL27:
 792              	.L24:
 369:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
 370:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                             endTransfer = MUX_CTRL_I2C_CMPLT_ANY_TRANSFER;
 371:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         }
 372:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         /* INTR_TX_EMPTY :
 373:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         * TX direction: the TX FIFO is EMPTY, the data from the buffer needs to be 
 374:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         * When there is no data in the component buffer, the underflow interrupt is
 375:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         * enabled to catch when all the data has been transferred.
 376:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         */
 377:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         else if(MUX_CTRL_CHECK_INTR_TX_MASKED(MUX_CTRL_INTR_TX_EMPTY))
 793              		.loc 1 377 0
 794 01bc 504A     		ldr	r2, .L74+100
 795 01be 1068     		ldr	r0, [r2]
 796 01c0 C006     		lsl	r0, r0, #27
 797 01c2 25D5     		bpl	.L73
 798              	.L26:
 378:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         {
 379:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                             while(MUX_CTRL_I2C_FIFO_SIZE != MUX_CTRL_GET_TX_FIFO_ENTRIES)
 799              		.loc 1 379 0
 800 01c4 4A4A     		ldr	r2, .L74+84
 801 01c6 1068     		ldr	r0, [r2]
 802 01c8 1F22     		mov	r2, #31
 803 01ca 0240     		and	r2, r0
 804 01cc 082A     		cmp	r2, #8
 805 01ce 1BD0     		beq	.L28
 380:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                             {
 381:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                                 /* The temporary mstrWrBufIndexTmp is used because slave could NACK
 382:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                                 * roll-back required in this case. The mstrWrBufIndex is updated at
 383:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                                 */
 384:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                                 if(MUX_CTRL_mstrWrBufIndexTmp < MUX_CTRL_mstrWrBufSize)
 806              		.loc 1 384 0
 807 01d0 464A     		ldr	r2, .L74+80
 808 01d2 3948     		ldr	r0, .L74+28
 809 01d4 1568     		ldr	r5, [r2]
 810 01d6 0468     		ldr	r4, [r0]
 811 01d8 A542     		cmp	r5, r4
 812 01da 15D2     		bcs	.L28
 385:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                                 {
 386:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                                 #if(!MUX_CTRL_CY_SCBIP_V0)
 387:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                                    /* Clear INTR_TX.UNDERFLOW before putting the last byte into TX 
 388:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                                     * a proper trigger at the end of transaction when INTR_TX.UNDER
 389:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                                     * event. Ticket ID# 156735.
 390:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                                     */
ARM GAS  C:\Users\victo\AppData\Local\Temp\ccVe2IoV.s 			page 48


 391:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                                     if(MUX_CTRL_mstrWrBufIndexTmp == (MUX_CTRL_mstrWrBufSize - 1u))
 813              		.loc 1 391 0
 814 01dc 1468     		ldr	r4, [r2]
 815 01de 0068     		ldr	r0, [r0]
 816 01e0 0138     		sub	r0, r0, #1
 817 01e2 8442     		cmp	r4, r0
 818 01e4 04D1     		bne	.L29
 392:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                                     {
 393:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                                         MUX_CTRL_ClearTxInterruptSource(MUX_CTRL_INTR_TX_UNDERFLOW)
 819              		.loc 1 393 0
 820 01e6 4020     		mov	r0, #64
 821 01e8 464C     		ldr	r4, .L74+104
 822 01ea 2060     		str	r0, [r4]
 394:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                                         MUX_CTRL_SetTxInterruptMode(MUX_CTRL_INTR_TX_UNDERFLOW);
 823              		.loc 1 394 0
 824 01ec 334C     		ldr	r4, .L74+32
 825 01ee 2060     		str	r0, [r4]
 826              	.L29:
 395:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                                     }
 396:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                                  #endif /* (!MUX_CTRL_CY_SCBIP_V0) */
 397:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
 398:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                                     /* Put data into TX FIFO */
 399:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                                     MUX_CTRL_TX_FIFO_WR_REG = (uint32) MUX_CTRL_mstrWrBufPtr[MUX_CT
 827              		.loc 1 399 0
 828 01f0 454C     		ldr	r4, .L74+108
 829 01f2 1068     		ldr	r0, [r2]
 830 01f4 2468     		ldr	r4, [r4]
 831 01f6 2018     		add	r0, r4, r0
 832 01f8 0078     		ldrb	r0, [r0]
 833 01fa 444C     		ldr	r4, .L74+112
 834 01fc C0B2     		uxtb	r0, r0
 835 01fe 2060     		str	r0, [r4]
 400:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                                     MUX_CTRL_mstrWrBufIndexTmp++;
 836              		.loc 1 400 0
 837 0200 1068     		ldr	r0, [r2]
 838 0202 0130     		add	r0, r0, #1
 839 0204 1060     		str	r0, [r2]
 840 0206 DDE7     		b	.L26
 841              	.L28:
 401:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                                 }
 402:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                                 else
 403:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                                 {
 404:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                                     break; /* No more data to put */
 405:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                                 }
 406:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                             }
 407:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
 408:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         #if(MUX_CTRL_CY_SCBIP_V0)
 409:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                             if(MUX_CTRL_mstrWrBufIndexTmp == MUX_CTRL_mstrWrBufSize)
 410:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                             {
 411:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                                 MUX_CTRL_SetTxInterruptMode(MUX_CTRL_INTR_TX_UNDERFLOW);
 412:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                             }
 413:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
 414:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                             MUX_CTRL_ClearTxInterruptSource(MUX_CTRL_INTR_TX_ALL);
 415:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         #else
 416:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                             MUX_CTRL_ClearTxInterruptSource(MUX_CTRL_INTR_TX_EMPTY);
 842              		.loc 1 416 0
 843 0208 1020     		mov	r0, #16
ARM GAS  C:\Users\victo\AppData\Local\Temp\ccVe2IoV.s 			page 49


 844 020a 3E4A     		ldr	r2, .L74+104
 845              	.L69:
 846 020c 1060     		str	r0, [r2]
 847 020e 07E0     		b	.L18
 848              	.L73:
 417:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         #endif /* (MUX_CTRL_CY_SCBIP_V0) */
 418:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         }
 419:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         /* INTR_TX_UNDERFLOW:
 420:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         * TX direction: all data from the TX FIFO was transferred to the slave.
 421:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         * The transaction needs to be completed.
 422:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         */
 423:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         else if(MUX_CTRL_CHECK_INTR_TX_MASKED(MUX_CTRL_INTR_TX_UNDERFLOW))
 849              		.loc 1 423 0
 850 0210 1268     		ldr	r2, [r2]
 851 0212 5206     		lsl	r2, r2, #25
 852 0214 04D5     		bpl	.L18
 424:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         {
 425:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                             /* Update number of transferred bytes */
 426:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                             MUX_CTRL_mstrWrBufIndex = MUX_CTRL_mstrWrBufIndexTmp;
 853              		.loc 1 426 0
 854 0216 354A     		ldr	r2, .L74+80
 855 0218 1168     		ldr	r1, [r2]
 856              	.LVL28:
 857 021a 364A     		ldr	r2, .L74+88
 858              	.L70:
 859 021c 1160     		str	r1, [r2]
 860              	.LVL29:
 861 021e 01E0     		b	.L31
 862              	.LVL30:
 863              	.L18:
 427:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
 428:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                             endTransfer = MUX_CTRL_I2C_CMPLT_ANY_TRANSFER;
 429:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         }
 430:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         else
 431:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         {
 432:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                             /* Do nothing */
 433:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         }
 434:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     }
 435:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 }
 436:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
 437:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 if(0u != endTransfer) /* Complete transfer */
 864              		.loc 1 437 0
 865 0220 0029     		cmp	r1, #0
 866 0222 3AD0     		beq	.L1
 867              	.LVL31:
 868              	.L31:
 438:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 {
 439:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     /* Clean-up master after reading: only in case of NACK */
 440:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     MUX_CTRL_DISABLE_MASTER_AUTO_DATA_ACK;
 869              		.loc 1 440 0
 870 0224 2A49     		ldr	r1, .L74+52
 871 0226 2B4A     		ldr	r2, .L74+56
 872 0228 0868     		ldr	r0, [r1]
 873 022a 0240     		and	r2, r0
 874 022c 0A60     		str	r2, [r1]
 441:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
 442:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     /* Disable data processing interrupts: they have to be cleared before */
ARM GAS  C:\Users\victo\AppData\Local\Temp\ccVe2IoV.s 			page 50


 443:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     MUX_CTRL_SetRxInterruptMode(MUX_CTRL_NO_INTR_SOURCES);
 875              		.loc 1 443 0
 876 022e 0022     		mov	r2, #0
 877 0230 3749     		ldr	r1, .L74+116
 878 0232 0A60     		str	r2, [r1]
 444:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     MUX_CTRL_SetTxInterruptMode(MUX_CTRL_NO_INTR_SOURCES);
 879              		.loc 1 444 0
 880 0234 2149     		ldr	r1, .L74+32
 881 0236 0A60     		str	r2, [r1]
 445:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
 446:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     if(MUX_CTRL_CHECK_I2C_MODE_NO_STOP(MUX_CTRL_mstrControl))
 882              		.loc 1 446 0
 883 0238 364A     		ldr	r2, .L74+120
 884 023a 1278     		ldrb	r2, [r2]
 885 023c 9207     		lsl	r2, r2, #30
 886 023e 0CD5     		bpl	.L32
 447:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     {
 448:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         /* On-going transaction is suspended: the ReStart is generated by the API r
 449:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         MUX_CTRL_mstrStatus |= (uint16) (MUX_CTRL_I2C_MSTAT_XFER_HALT |
 887              		.loc 1 449 0
 888 0240 0122     		mov	r2, #1
 450:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                                                                  MUX_CTRL_GET_I2C_MSTAT_CMPLT);
 889              		.loc 1 450 0
 890 0242 1978     		ldrb	r1, [r3]
 449:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                                                                  MUX_CTRL_GET_I2C_MSTAT_CMPLT);
 891              		.loc 1 449 0
 892 0244 1A48     		ldr	r0, .L74+20
 893 0246 0A40     		and	r2, r1
 894 0248 0A21     		mov	r1, #10
 895 024a 8A1A     		sub	r2, r1, r2
 896 024c 0188     		ldrh	r1, [r0]
 897 024e 0A43     		orr	r2, r1
 898 0250 92B2     		uxth	r2, r2
 899 0252 0280     		strh	r2, [r0]
 451:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
 452:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         MUX_CTRL_state = MUX_CTRL_I2C_FSM_MSTR_HALT;
 900              		.loc 1 452 0
 901 0254 6022     		mov	r2, #96
 902              	.L71:
 903 0256 1A70     		strb	r2, [r3]
 904 0258 1FE0     		b	.L1
 905              	.L32:
 453:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     }
 454:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     else
 455:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     {
 456:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         /* Complete transaction: exclude the data processing state and generate Sto
 457:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         * The completion status will be set after Stop generation.
 458:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         * A special case is read: because NACK and Stop are generated by the comman
 459:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         * Lost arbitration can occur during NACK generation when
 460:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         * the other master is still reading from the slave.
 461:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         */
 462:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         MUX_CTRL_I2C_MASTER_GENERATE_STOP;
 906              		.loc 1 462 0
 907 025a 2F4B     		ldr	r3, .L74+124
 908 025c 1A68     		ldr	r2, [r3]
 909 025e 1823     		mov	r3, #24
 910 0260 9206     		lsl	r2, r2, #26
ARM GAS  C:\Users\victo\AppData\Local\Temp\ccVe2IoV.s 			page 51


 911 0262 00D4     		bmi	.L34
 912 0264 083B     		sub	r3, r3, #8
 913              	.L34:
 914              		.loc 1 462 0 is_stmt 0 discriminator 4
 915 0266 1E4A     		ldr	r2, .L74+68
 916 0268 1360     		str	r3, [r2]
 917 026a 16E0     		b	.L1
 918              	.LVL32:
 919              	.L11:
 463:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     }
 464:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 }
 465:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****             }
 466:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
 467:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****         } /* (MUX_CTRL_I2C_MASTER) */
 468:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****         #endif
 469:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
 470:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****     } /* (MUX_CTRL_CHECK_I2C_FSM_MASTER) */
 471:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
 472:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
 473:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****     /* FSM Slave */
 474:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****     else if(MUX_CTRL_CHECK_I2C_FSM_SLAVE)
 920              		.loc 1 474 0 is_stmt 1
 921 026c 1978     		ldrb	r1, [r3]
 922              	.LVL33:
 923 026e 1142     		tst	r1, r2
 924 0270 13D1     		bne	.L1
 475:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****     {
 476:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****         #if(MUX_CTRL_I2C_SLAVE)
 477:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****         {
 478:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****             /* INTR_SLAVE_NACK:
 479:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****             * The master completes reading the slave: the appropriate flags have to be set.
 480:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****             * The TX FIFO is cleared after an overflow condition is set.
 481:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****             */
 482:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****             if(MUX_CTRL_CHECK_INTR_SLAVE_MASKED(MUX_CTRL_INTR_SLAVE_I2C_NACK))
 483:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****             {
 484:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 MUX_CTRL_ClearSlaveInterruptSource(MUX_CTRL_INTR_SLAVE_I2C_NACK);
 485:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
 486:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 /* All entries that remain in TX FIFO max value is 9: 8 (FIFO) + 1 (SHIFTER) */
 487:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 diffCount = (MUX_CTRL_GET_TX_FIFO_ENTRIES + MUX_CTRL_GET_TX_FIFO_SR_VALID);
 488:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
 489:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 if(MUX_CTRL_slOverFlowCount > diffCount) /* Overflow */
 490:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 {
 491:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     MUX_CTRL_slStatus |= (uint8) MUX_CTRL_I2C_SSTAT_RD_OVFL;
 492:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 }
 493:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 else /* No Overflow */
 494:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 {
 495:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     /* Roll-back temporary index */
 496:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     MUX_CTRL_slRdBufIndexTmp -= (diffCount - MUX_CTRL_slOverFlowCount);
 497:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 }
 498:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
 499:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 /* Update slave of transferred bytes */
 500:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 MUX_CTRL_slRdBufIndex = MUX_CTRL_slRdBufIndexTmp;
 501:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
 502:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 /* Clean-up TX FIFO */
 503:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 MUX_CTRL_SetTxInterruptMode(MUX_CTRL_NO_INTR_SOURCES);
 504:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 MUX_CTRL_slOverFlowCount = 0u;
 505:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 MUX_CTRL_CLEAR_TX_FIFO;
ARM GAS  C:\Users\victo\AppData\Local\Temp\ccVe2IoV.s 			page 52


 506:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
 507:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 /* Complete master reading */
 508:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 MUX_CTRL_slStatus &= (uint8) ~MUX_CTRL_I2C_SSTAT_RD_BUSY;
 509:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 MUX_CTRL_slStatus |= (uint8)  MUX_CTRL_I2C_SSTAT_RD_CMPLT;
 510:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 MUX_CTRL_state     =  MUX_CTRL_I2C_FSM_IDLE;
 511:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****             }
 512:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
 513:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
 514:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****             /* INTR_SLAVE_I2C_WRITE_STOP:
 515:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****             * The master completes writing to the slave: the appropriate flags have to be set.
 516:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****             * The RX FIFO contains 1-8 bytes from the previous transaction which needs to be read.
 517:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****             * There is a possibility that RX FIFO contains an address, it needs to leave it there.
 518:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****             */
 519:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****             if(MUX_CTRL_CHECK_INTR_SLAVE_MASKED(MUX_CTRL_INTR_SLAVE_I2C_WRITE_STOP))
 520:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****             {
 521:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 MUX_CTRL_ClearSlaveInterruptSource(MUX_CTRL_INTR_SLAVE_I2C_WRITE_STOP);
 522:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
 523:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 /* Read bytes from RX FIFO when auto data ACK receive logic is enabled. Otherwise a
 524:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 * were already read from the RX FIFO except for address byte which has to stay here
 525:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 * I2C_ADDR_MATCH.
 526:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 */
 527:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 if (0u != (MUX_CTRL_I2C_CTRL_REG & MUX_CTRL_I2C_CTRL_S_READY_DATA_ACK))
 528:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 {
 529:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     while(0u != MUX_CTRL_GET_RX_FIFO_ENTRIES)
 530:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     {
 531:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         #if(MUX_CTRL_CHECK_I2C_ACCEPT_ADDRESS)
 532:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         {
 533:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                             if((1u == MUX_CTRL_GET_RX_FIFO_ENTRIES) &&
 534:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                                (MUX_CTRL_CHECK_INTR_SLAVE_MASKED(MUX_CTRL_INTR_SLAVE_I2C_ADDR_MATCH
 535:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                             {
 536:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                                 break; /* Leave address in RX FIFO */
 537:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                             }
 538:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         }
 539:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         #endif
 540:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
 541:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         /* Put data in component buffer */
 542:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         MUX_CTRL_slWrBufPtr[MUX_CTRL_slWrBufIndex] = (uint8) MUX_CTRL_RX_FIFO_RD_RE
 543:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         MUX_CTRL_slWrBufIndex++;
 544:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     }
 545:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
 546:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     MUX_CTRL_DISABLE_SLAVE_AUTO_DATA;
 547:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 }
 548:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
 549:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 if(MUX_CTRL_CHECK_INTR_RX(MUX_CTRL_INTR_RX_OVERFLOW))
 550:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 {
 551:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     MUX_CTRL_slStatus |= (uint8) MUX_CTRL_I2C_SSTAT_WR_OVFL;
 552:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 }
 553:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
 554:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 /* Clears RX interrupt sources triggered on data receiving */
 555:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 MUX_CTRL_SetRxInterruptMode(MUX_CTRL_NO_INTR_SOURCES);
 556:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 MUX_CTRL_ClearRxInterruptSource(MUX_CTRL_INTR_RX_ALL);
 557:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
 558:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 /* Complete master writing */
 559:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 MUX_CTRL_slStatus &= (uint8) ~MUX_CTRL_I2C_SSTAT_WR_BUSY;
 560:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 MUX_CTRL_slStatus |= (uint8)  MUX_CTRL_I2C_SSTAT_WR_CMPLT;
 561:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 MUX_CTRL_state     =  MUX_CTRL_I2C_FSM_IDLE;
 562:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****             }
ARM GAS  C:\Users\victo\AppData\Local\Temp\ccVe2IoV.s 			page 53


 563:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
 564:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
 565:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****             /* INTR_SLAVE_I2C_ADDR_MATCH or INTR_SLAVE_I2C_GENERAL:
 566:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****             * The address match or general call address event starts the slave operation:
 567:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****             * after leaving the TX or RX direction has to be chosen.
 568:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****             * The wakeup interrupt must be cleared only after an address match is set.
 569:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****             */
 570:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****         #if (MUX_CTRL_I2C_CUSTOM_ADDRESS_HANDLER_CONST)
 571:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****             if (MUX_CTRL_CHECK_INTR_SLAVE_MASKED(MUX_CTRL_INTR_SLAVE_I2C_ADDR_MATCH |
 572:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                                                          MUX_CTRL_INTR_SLAVE_I2C_GENERAL))
 573:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****         #else
 574:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****             if (MUX_CTRL_CHECK_INTR_SLAVE_MASKED(MUX_CTRL_INTR_SLAVE_I2C_ADDR_MATCH))
 575:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****         #endif /* (MUX_CTRL_I2C_CUSTOM_ADDRESS_HANDLER_CONST) */
 576:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****             {
 577:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 /* Clear externally clocked address match interrupt source when internally clocked 
 578:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 MUX_CTRL_ClearI2CExtClkInterruptSource(MUX_CTRL_INTR_I2C_EC_WAKE_UP);
 579:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
 580:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 #if (MUX_CTRL_I2C_CUSTOM_ADDRESS_HANDLER)
 581:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 {
 582:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     if (NULL != MUX_CTRL_customAddressHandler)
 583:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     {
 584:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         /* Call custom address handler */
 585:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         response = MUX_CTRL_customAddressHandler();
 586:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     }
 587:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     else
 588:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     {
 589:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         /* Read address from the RX FIFO. If there is no address underflow triggers
 590:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         * componnet does not use that source. */
 591:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         (void) MUX_CTRL_RX_FIFO_RD_REG;
 592:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         response = MUX_CTRL_I2C_ACK_ADDR;
 593:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     }
 594:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
 595:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     /* Clears RX sources after address was received in the RX FIFO */
 596:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     MUX_CTRL_ClearRxInterruptSource(MUX_CTRL_INTR_RX_ALL);
 597:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 }
 598:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 #endif
 599:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
 600:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****             #if (MUX_CTRL_I2C_CUSTOM_ADDRESS_HANDLER_CONST)
 601:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 if (response == MUX_CTRL_I2C_NAK_ADDR)
 602:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 {
 603:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 #if (!MUX_CTRL_CY_SCBIP_V0)
 604:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     /* Disable write stop interrupt source as it triggers after address was NACKed.
 605:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     MUX_CTRL_DISABLE_INTR_SLAVE(MUX_CTRL_INTR_SLAVE_I2C_WRITE_STOP);
 606:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 #endif /* (!MUX_CTRL_CY_SCBIP_V0) */
 607:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
 608:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     /* Clear address match and stop history */
 609:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     MUX_CTRL_ClearSlaveInterruptSource(MUX_CTRL_INTR_SLAVE_ALL);
 610:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
 611:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     /* ACK the address byte */
 612:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     MUX_CTRL_I2C_SLAVE_GENERATE_NACK;
 613:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 }
 614:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 else
 615:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****             #endif /* (MUX_CTRL_I2C_CUSTOM_ADDRESS_HANDLER_CONST) */
 616:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 {
 617:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     if(MUX_CTRL_CHECK_I2C_STATUS(MUX_CTRL_I2C_STATUS_S_READ))
 618:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     /* TX direction: master reads from slave */
 619:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     {
ARM GAS  C:\Users\victo\AppData\Local\Temp\ccVe2IoV.s 			page 54


 620:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         MUX_CTRL_SetTxInterruptMode(MUX_CTRL_INTR_TX_EMPTY);
 621:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
 622:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         /* Set temporary index to address buffer clear from API */
 623:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         MUX_CTRL_slRdBufIndexTmp = MUX_CTRL_slRdBufIndex;
 624:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
 625:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         /* Start master reading */
 626:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         MUX_CTRL_slStatus |= (uint8) MUX_CTRL_I2C_SSTAT_RD_BUSY;
 627:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         MUX_CTRL_state     = MUX_CTRL_I2C_FSM_SL_RD;
 628:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     }
 629:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     else
 630:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     /* RX direction: master writes into slave */
 631:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     {
 632:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         /* Calculate available buffer size */
 633:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         diffCount = (MUX_CTRL_slWrBufSize - MUX_CTRL_slWrBufIndex);
 634:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
 635:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     #if (MUX_CTRL_CY_SCBIP_V0)
 636:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         if(diffCount < MUX_CTRL_I2C_FIFO_SIZE)
 637:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         /* Receive data: byte-by-byte */
 638:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         {
 639:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                             MUX_CTRL_SetRxInterruptMode(MUX_CTRL_INTR_RX_NOT_EMPTY);
 640:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         }
 641:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         else
 642:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         /* Receive data: into RX FIFO */
 643:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         {
 644:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                             if(diffCount == MUX_CTRL_I2C_FIFO_SIZE)
 645:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                             {
 646:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                                 /* NACK when RX FIFO become FULL */
 647:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                                 MUX_CTRL_ENABLE_SLAVE_AUTO_DATA;
 648:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                             }
 649:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                             else
 650:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                             {
 651:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                                 /* Stretch clock when RX FIFO becomes FULL */
 652:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                                 MUX_CTRL_ENABLE_SLAVE_AUTO_DATA_ACK;
 653:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                                 MUX_CTRL_SetRxInterruptMode(MUX_CTRL_INTR_RX_FULL);
 654:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                             }
 655:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         }
 656:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
 657:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     #else
 658:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         #if(MUX_CTRL_CHECK_I2C_ACCEPT_ADDRESS)
 659:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         {
 660:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                             /* Enable RX.NOT_EMPTY interrupt source to receive byte by byte.
 661:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                             * The byte by byte receive is always chosen for the case when an addres
 662:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                             * in RX FIFO. Ticket ID#175559.
 663:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                             */
 664:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                             MUX_CTRL_SetRxInterruptMode(MUX_CTRL_INTR_RX_NOT_EMPTY);
 665:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         }
 666:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         #else
 667:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         {
 668:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                             if(diffCount < MUX_CTRL_I2C_FIFO_SIZE)
 669:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                             /* Receive data: byte-by-byte */
 670:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                             {
 671:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                                 MUX_CTRL_SetRxInterruptMode(MUX_CTRL_INTR_RX_NOT_EMPTY);
 672:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                             }
 673:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                             else
 674:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                             /* Receive data: into RX FIFO */
 675:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                             {
 676:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                                 if(diffCount == MUX_CTRL_I2C_FIFO_SIZE)
ARM GAS  C:\Users\victo\AppData\Local\Temp\ccVe2IoV.s 			page 55


 677:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                                 {
 678:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                                     /* NACK when RX FIFO become FULL */
 679:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                                     MUX_CTRL_ENABLE_SLAVE_AUTO_DATA;
 680:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                                 }
 681:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                                 else
 682:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                                 {
 683:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                                     /* Stretch clock when RX FIFO becomes FULL */
 684:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                                     MUX_CTRL_ENABLE_SLAVE_AUTO_DATA_ACK;
 685:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                                     MUX_CTRL_SetRxInterruptMode(MUX_CTRL_INTR_RX_FULL);
 686:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                                 }
 687:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                             }
 688:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         }
 689:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         #endif
 690:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     #endif /* (MUX_CTRL_CY_SCBIP_V0) */
 691:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
 692:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         /* Start master reading */
 693:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         MUX_CTRL_slStatus |= (uint8) MUX_CTRL_I2C_SSTAT_WR_BUSY;
 694:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         MUX_CTRL_state     = MUX_CTRL_I2C_FSM_SL_WR;
 695:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     }
 696:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
 697:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     /* Clear address match and stop history */
 698:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     MUX_CTRL_ClearSlaveInterruptSource(MUX_CTRL_INTR_SLAVE_ALL);
 699:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
 700:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 #if (!MUX_CTRL_CY_SCBIP_V0)
 701:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     /* Enable write stop interrupt source as it triggers after address was NACKed. 
 702:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     MUX_CTRL_ENABLE_INTR_SLAVE(MUX_CTRL_INTR_SLAVE_I2C_WRITE_STOP);
 703:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 #endif /* (!MUX_CTRL_CY_SCBIP_V0) */
 704:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
 705:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     /* ACK the address byte */
 706:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     MUX_CTRL_I2C_SLAVE_GENERATE_ACK;
 707:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 }
 708:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****             }
 709:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
 710:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****             /* MUX_CTRL_INTR_RX_FULL:
 711:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****             * Get data from the RX FIFO and decide whether to ACK or NACK the following bytes
 712:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****             */
 713:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****             if(MUX_CTRL_CHECK_INTR_RX_MASKED(MUX_CTRL_INTR_RX_FULL))
 714:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****             {
 715:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 /* Calculate available buffer size to take into account that RX FIFO is FULL */
 716:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 diffCount =  MUX_CTRL_slWrBufSize -
 717:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                             (MUX_CTRL_slWrBufIndex + MUX_CTRL_I2C_FIFO_SIZE);
 718:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
 719:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 if(diffCount > MUX_CTRL_I2C_FIFO_SIZE) /* Proceed transaction */
 720:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 {
 721:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     diffCount   = MUX_CTRL_I2C_FIFO_SIZE;
 722:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     endTransfer = 0u;  /* Continue active transfer */
 723:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 }
 724:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 else /* End when FIFO becomes FULL again */
 725:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 {
 726:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     endTransfer = MUX_CTRL_I2C_CMPLT_ANY_TRANSFER;
 727:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 }
 728:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
 729:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 for(; (0u != diffCount); diffCount--)
 730:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 {
 731:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     /* Put data in component buffer */
 732:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     MUX_CTRL_slWrBufPtr[MUX_CTRL_slWrBufIndex] = (uint8) MUX_CTRL_RX_FIFO_RD_REG;
 733:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     MUX_CTRL_slWrBufIndex++;
ARM GAS  C:\Users\victo\AppData\Local\Temp\ccVe2IoV.s 			page 56


 734:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 }
 735:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
 736:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 if(0u != endTransfer) /* End transfer sending NACK */
 737:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 {
 738:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     MUX_CTRL_ENABLE_SLAVE_AUTO_DATA_NACK;
 739:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
 740:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     /* INTR_RX_FULL triggers earlier than INTR_SLAVE_I2C_STOP:
 741:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     * disable all RX interrupt sources.
 742:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     */
 743:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     MUX_CTRL_SetRxInterruptMode(MUX_CTRL_NO_INTR_SOURCES);
 744:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 }
 745:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
 746:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 MUX_CTRL_ClearRxInterruptSource(MUX_CTRL_INTR_RX_FULL);
 747:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****             }
 748:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****             /* MUX_CTRL_INTR_RX_NOT_EMPTY:
 749:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****             * The buffer size is less than 8: it requires processing in byte-by-byte mode.
 750:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****             */
 751:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****             else if(MUX_CTRL_CHECK_INTR_RX_MASKED(MUX_CTRL_INTR_RX_NOT_EMPTY))
 752:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****             {
 753:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 diffCount = MUX_CTRL_RX_FIFO_RD_REG;
 754:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
 755:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 if(MUX_CTRL_slWrBufIndex < MUX_CTRL_slWrBufSize)
 756:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 {
 757:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     MUX_CTRL_I2C_SLAVE_GENERATE_ACK;
 758:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
 759:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     /* Put data into component buffer */
 760:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     MUX_CTRL_slWrBufPtr[MUX_CTRL_slWrBufIndex] = (uint8) diffCount;
 761:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     MUX_CTRL_slWrBufIndex++;
 762:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 }
 763:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 else /* Overflow: there is no space in write buffer */
 764:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 {
 765:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     MUX_CTRL_I2C_SLAVE_GENERATE_NACK;
 766:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
 767:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     MUX_CTRL_slStatus |= (uint8) MUX_CTRL_I2C_SSTAT_WR_OVFL;
 768:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 }
 769:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
 770:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 MUX_CTRL_ClearRxInterruptSource(MUX_CTRL_INTR_RX_NOT_EMPTY);
 771:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****             }
 772:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****             else
 773:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****             {
 774:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 /* Does nothing */
 775:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****             }
 776:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
 777:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
 778:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****             /* MUX_CTRL_INTR_TX_EMPTY:
 779:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****             * The master reads the slave: provide data to read or 0xFF in the case of the end of th
 780:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****             * The overflow condition must be captured, but not set until the end of transaction.
 781:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****             * There is a possibility of a false overflow due to TX FIFO utilization.
 782:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****             */
 783:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****             if(MUX_CTRL_CHECK_INTR_TX_MASKED(MUX_CTRL_INTR_TX_EMPTY))
 784:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****             {
 785:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 while(MUX_CTRL_I2C_FIFO_SIZE != MUX_CTRL_GET_TX_FIFO_ENTRIES)
 786:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 {
 787:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     /* Temporary slRdBufIndexTmp is used because the master can NACK the byte and
 788:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     * index roll-back is required in this case. The slRdBufIndex is updated at the 
 789:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     * of the read transfer.
 790:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     */
ARM GAS  C:\Users\victo\AppData\Local\Temp\ccVe2IoV.s 			page 57


 791:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     if(MUX_CTRL_slRdBufIndexTmp < MUX_CTRL_slRdBufSize)
 792:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     /* Data from buffer */
 793:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     {
 794:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         MUX_CTRL_TX_FIFO_WR_REG = (uint32) MUX_CTRL_slRdBufPtr[MUX_CTRL_slRdBufInde
 795:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         MUX_CTRL_slRdBufIndexTmp++;
 796:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     }
 797:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     else
 798:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     /* Probably Overflow */
 799:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     {
 800:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         MUX_CTRL_TX_FIFO_WR_REG = MUX_CTRL_I2C_SLAVE_OVFL_RETURN;
 801:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
 802:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         if(0u == (MUX_CTRL_INTR_TX_OVERFLOW & MUX_CTRL_slOverFlowCount))
 803:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         {
 804:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                             /* Get counter in range of byte: value 10 is overflow */
 805:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                             MUX_CTRL_slOverFlowCount++;
 806:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                         }
 807:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                     }
 808:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 }
 809:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
 810:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****                 MUX_CTRL_ClearTxInterruptSource(MUX_CTRL_INTR_TX_EMPTY);
 811:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****             }
 812:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
 813:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****         }  /* (MUX_CTRL_I2C_SLAVE) */
 814:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****         #endif
 815:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****     }
 816:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
 817:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
 818:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****     /* FSM EXIT:
 819:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****     * Slave:  INTR_SLAVE_I2C_BUS_ERROR, INTR_SLAVE_I2C_ARB_LOST
 820:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****     * Master: INTR_MASTER_I2C_BUS_ERROR, INTR_MASTER_I2C_ARB_LOST.
 821:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****     */
 822:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****     else
 823:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****     {
 824:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****         MUX_CTRL_CTRL_REG &= (uint32) ~MUX_CTRL_CTRL_ENABLED; /* Disable scb IP */
 925              		.loc 1 824 0
 926 0272 2A48     		ldr	r0, .L74+128
 927 0274 0168     		ldr	r1, [r0]
 928 0276 4900     		lsl	r1, r1, #1
 929 0278 4908     		lsr	r1, r1, #1
 930 027a 0160     		str	r1, [r0]
 825:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
 826:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****         MUX_CTRL_state = MUX_CTRL_I2C_FSM_IDLE;
 931              		.loc 1 826 0
 932 027c 1A70     		strb	r2, [r3]
 827:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
 828:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****         MUX_CTRL_DISABLE_SLAVE_AUTO_DATA;
 933              		.loc 1 828 0
 934 027e 144B     		ldr	r3, .L74+52
 935 0280 274A     		ldr	r2, .L74+132
 936 0282 1968     		ldr	r1, [r3]
 937 0284 0A40     		and	r2, r1
 938 0286 1A60     		str	r2, [r3]
 829:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****         MUX_CTRL_DISABLE_MASTER_AUTO_DATA;
 939              		.loc 1 829 0
 940 0288 1968     		ldr	r1, [r3]
 941 028a 264A     		ldr	r2, .L74+136
 942 028c 0A40     		and	r2, r1
ARM GAS  C:\Users\victo\AppData\Local\Temp\ccVe2IoV.s 			page 58


 943 028e 1A60     		str	r2, [r3]
 830:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
 831:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****     #if(MUX_CTRL_CY_SCBIP_V0)
 832:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****         MUX_CTRL_SetRxInterruptMode(MUX_CTRL_NO_INTR_SOURCES);
 833:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****         MUX_CTRL_SetTxInterruptMode(MUX_CTRL_NO_INTR_SOURCES);
 834:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
 835:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****         /* Clear interrupt sources as they are not automatically cleared after SCB is disabled */
 836:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****         MUX_CTRL_ClearTxInterruptSource(MUX_CTRL_INTR_RX_ALL);
 837:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****         MUX_CTRL_ClearRxInterruptSource(MUX_CTRL_INTR_TX_ALL);
 838:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****         MUX_CTRL_ClearSlaveInterruptSource(MUX_CTRL_INTR_SLAVE_ALL);
 839:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****         MUX_CTRL_ClearMasterInterruptSource(MUX_CTRL_INTR_MASTER_ALL);
 840:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****     #endif /* (MUX_CTRL_CY_SCBIP_V0) */
 841:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
 842:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****         MUX_CTRL_CTRL_REG |= (uint32) MUX_CTRL_CTRL_ENABLED;  /* Enable scb IP */
 944              		.loc 1 842 0
 945 0290 8022     		mov	r2, #128
 946 0292 0368     		ldr	r3, [r0]
 947 0294 1206     		lsl	r2, r2, #24
 948 0296 1343     		orr	r3, r2
 949 0298 0360     		str	r3, [r0]
 950              	.L1:
 843:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****     }
 844:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** 
 845:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** #ifdef MUX_CTRL_I2C_ISR_EXIT_CALLBACK
 846:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****     MUX_CTRL_I2C_ISR_ExitCallback();
 847:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** #endif /* MUX_CTRL_I2C_ISR_EXIT_CALLBACK */
 848:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c ****     
 849:.\Generated_Source\PSoC4/MUX_CTRL_I2C_INT.c **** }
 951              		.loc 1 849 0
 952              		@ sp needed
 953 029a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 954              	.L75:
 955              		.align	2
 956              	.L74:
 957 029c 00000000 		.word	MUX_CTRL_customIntrHandler
 958 02a0 8C0E0840 		.word	1074269836
 959 02a4 880E0840 		.word	1074269832
 960 02a8 00000000 		.word	MUX_CTRL_state
 961 02ac 0C0F0840 		.word	1074269964
 962 02b0 00000000 		.word	MUX_CTRL_mstrStatus
 963 02b4 000F0840 		.word	1074269952
 964 02b8 00000000 		.word	MUX_CTRL_mstrWrBufSize
 965 02bc 880F0840 		.word	1074270088
 966 02c0 CC0F0840 		.word	1074270156
 967 02c4 00000000 		.word	MUX_CTRL_mstrRdBufSize
 968 02c8 00000000 		.word	MUX_CTRL_mstrRdBufIndex
 969 02cc 08030840 		.word	1074266888
 970 02d0 60000840 		.word	1074266208
 971 02d4 FFFEFFFF 		.word	-257
 972 02d8 00000000 		.word	MUX_CTRL_mstrRdBufPtr
 973 02dc 40030840 		.word	1074266944
 974 02e0 68000840 		.word	1074266216
 975 02e4 ED0F0000 		.word	4077
 976 02e8 C00F0840 		.word	1074270144
 977 02ec 00000000 		.word	MUX_CTRL_mstrWrBufIndexTmp
 978 02f0 08020840 		.word	1074266632
 979 02f4 00000000 		.word	MUX_CTRL_mstrWrBufIndex
ARM GAS  C:\Users\victo\AppData\Local\Temp\ccVe2IoV.s 			page 59


 980 02f8 04020840 		.word	1074266628
 981 02fc FFFFFEFF 		.word	-65537
 982 0300 8C0F0840 		.word	1074270092
 983 0304 800F0840 		.word	1074270080
 984 0308 00000000 		.word	MUX_CTRL_mstrWrBufPtr
 985 030c 40020840 		.word	1074266688
 986 0310 C80F0840 		.word	1074270152
 987 0314 00000000 		.word	MUX_CTRL_mstrControl
 988 0318 64000840 		.word	1074266212
 989 031c 00000840 		.word	1074266112
 990 0320 FF5FFFFF 		.word	-40961
 991 0324 FFFCFFFF 		.word	-769
 992              		.cfi_endproc
 993              	.LFE0:
 994              		.size	MUX_CTRL_I2C_ISR, .-MUX_CTRL_I2C_ISR
 995              		.text
 996              	.Letext0:
 997              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 998              		.file 3 ".\\Generated_Source\\PSoC4\\MUX_CTRL_PVT.h"
 999              		.file 4 ".\\Generated_Source\\PSoC4\\MUX_CTRL_I2C_PVT.h"
 1000              		.section	.debug_info,"",%progbits
 1001              	.Ldebug_info0:
 1002 0000 89010000 		.4byte	0x189
 1003 0004 0400     		.2byte	0x4
 1004 0006 00000000 		.4byte	.Ldebug_abbrev0
 1005 000a 04       		.byte	0x4
 1006 000b 01       		.uleb128 0x1
 1007 000c 9C010000 		.4byte	.LASF31
 1008 0010 01       		.byte	0x1
 1009 0011 4C010000 		.4byte	.LASF32
 1010 0015 65020000 		.4byte	.LASF33
 1011 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1012 001d 00000000 		.4byte	0
 1013 0021 00000000 		.4byte	.Ldebug_line0
 1014 0025 02       		.uleb128 0x2
 1015 0026 01       		.byte	0x1
 1016 0027 06       		.byte	0x6
 1017 0028 F9020000 		.4byte	.LASF0
 1018 002c 02       		.uleb128 0x2
 1019 002d 01       		.byte	0x1
 1020 002e 08       		.byte	0x8
 1021 002f E5000000 		.4byte	.LASF1
 1022 0033 02       		.uleb128 0x2
 1023 0034 02       		.byte	0x2
 1024 0035 05       		.byte	0x5
 1025 0036 E6020000 		.4byte	.LASF2
 1026 003a 02       		.uleb128 0x2
 1027 003b 02       		.byte	0x2
 1028 003c 07       		.byte	0x7
 1029 003d 4C000000 		.4byte	.LASF3
 1030 0041 02       		.uleb128 0x2
 1031 0042 04       		.byte	0x4
 1032 0043 05       		.byte	0x5
 1033 0044 F0020000 		.4byte	.LASF4
 1034 0048 02       		.uleb128 0x2
 1035 0049 04       		.byte	0x4
 1036 004a 07       		.byte	0x7
ARM GAS  C:\Users\victo\AppData\Local\Temp\ccVe2IoV.s 			page 60


 1037 004b C3000000 		.4byte	.LASF5
 1038 004f 02       		.uleb128 0x2
 1039 0050 08       		.byte	0x8
 1040 0051 05       		.byte	0x5
 1041 0052 D3020000 		.4byte	.LASF6
 1042 0056 02       		.uleb128 0x2
 1043 0057 08       		.byte	0x8
 1044 0058 07       		.byte	0x7
 1045 0059 85010000 		.4byte	.LASF7
 1046 005d 03       		.uleb128 0x3
 1047 005e 04       		.byte	0x4
 1048 005f 05       		.byte	0x5
 1049 0060 696E7400 		.ascii	"int\000"
 1050 0064 02       		.uleb128 0x2
 1051 0065 04       		.byte	0x4
 1052 0066 07       		.byte	0x7
 1053 0067 78010000 		.4byte	.LASF8
 1054 006b 04       		.uleb128 0x4
 1055 006c DF000000 		.4byte	.LASF9
 1056 0070 02       		.byte	0x2
 1057 0071 9801     		.2byte	0x198
 1058 0073 2C000000 		.4byte	0x2c
 1059 0077 04       		.uleb128 0x4
 1060 0078 15010000 		.4byte	.LASF10
 1061 007c 02       		.byte	0x2
 1062 007d 9901     		.2byte	0x199
 1063 007f 3A000000 		.4byte	0x3a
 1064 0083 04       		.uleb128 0x4
 1065 0084 45010000 		.4byte	.LASF11
 1066 0088 02       		.byte	0x2
 1067 0089 9A01     		.2byte	0x19a
 1068 008b 48000000 		.4byte	0x48
 1069 008f 02       		.uleb128 0x2
 1070 0090 04       		.byte	0x4
 1071 0091 04       		.byte	0x4
 1072 0092 82000000 		.4byte	.LASF12
 1073 0096 02       		.uleb128 0x2
 1074 0097 08       		.byte	0x8
 1075 0098 04       		.byte	0x4
 1076 0099 F3000000 		.4byte	.LASF13
 1077 009d 02       		.uleb128 0x2
 1078 009e 01       		.byte	0x1
 1079 009f 08       		.byte	0x8
 1080 00a0 E1020000 		.4byte	.LASF14
 1081 00a4 05       		.uleb128 0x5
 1082 00a5 6B000000 		.4byte	0x6b
 1083 00a9 05       		.uleb128 0x5
 1084 00aa 77000000 		.4byte	0x77
 1085 00ae 04       		.uleb128 0x4
 1086 00af 00000000 		.4byte	.LASF15
 1087 00b3 02       		.byte	0x2
 1088 00b4 4402     		.2byte	0x244
 1089 00b6 BA000000 		.4byte	0xba
 1090 00ba 05       		.uleb128 0x5
 1091 00bb 83000000 		.4byte	0x83
 1092 00bf 04       		.uleb128 0x4
 1093 00c0 58020000 		.4byte	.LASF16
ARM GAS  C:\Users\victo\AppData\Local\Temp\ccVe2IoV.s 			page 61


 1094 00c4 02       		.byte	0x2
 1095 00c5 5402     		.2byte	0x254
 1096 00c7 CB000000 		.4byte	0xcb
 1097 00cb 06       		.uleb128 0x6
 1098 00cc 04       		.byte	0x4
 1099 00cd D1000000 		.4byte	0xd1
 1100 00d1 07       		.uleb128 0x7
 1101 00d2 02       		.uleb128 0x2
 1102 00d3 04       		.byte	0x4
 1103 00d4 07       		.byte	0x7
 1104 00d5 CA020000 		.4byte	.LASF17
 1105 00d9 08       		.uleb128 0x8
 1106 00da 1C010000 		.4byte	.LASF34
 1107 00de 01       		.byte	0x1
 1108 00df 25       		.byte	0x25
 1109 00e0 00000000 		.4byte	.LFB0
 1110 00e4 28030000 		.4byte	.LFE0-.LFB0
 1111 00e8 01       		.uleb128 0x1
 1112 00e9 9C       		.byte	0x9c
 1113 00ea 0D010000 		.4byte	0x10d
 1114 00ee 09       		.uleb128 0x9
 1115 00ef D5000000 		.4byte	.LASF18
 1116 00f3 01       		.byte	0x1
 1117 00f4 27       		.byte	0x27
 1118 00f5 83000000 		.4byte	0x83
 1119 00f9 00000000 		.4byte	.LLST0
 1120 00fd 09       		.uleb128 0x9
 1121 00fe 5F000000 		.4byte	.LASF19
 1122 0102 01       		.byte	0x1
 1123 0103 28       		.byte	0x28
 1124 0104 83000000 		.4byte	0x83
 1125 0108 2A000000 		.4byte	.LLST1
 1126 010c 00       		.byte	0
 1127 010d 0A       		.uleb128 0xa
 1128 010e 1C000000 		.4byte	.LASF20
 1129 0112 03       		.byte	0x3
 1130 0113 3A       		.byte	0x3a
 1131 0114 BF000000 		.4byte	0xbf
 1132 0118 0A       		.uleb128 0xa
 1133 0119 9C000000 		.4byte	.LASF21
 1134 011d 04       		.byte	0x4
 1135 011e 1D       		.byte	0x1d
 1136 011f A4000000 		.4byte	0xa4
 1137 0123 0A       		.uleb128 0xa
 1138 0124 88000000 		.4byte	.LASF22
 1139 0128 04       		.byte	0x4
 1140 0129 30       		.byte	0x30
 1141 012a A9000000 		.4byte	0xa9
 1142 012e 0A       		.uleb128 0xa
 1143 012f 37000000 		.4byte	.LASF23
 1144 0133 04       		.byte	0x4
 1145 0134 31       		.byte	0x31
 1146 0135 A4000000 		.4byte	0xa4
 1147 0139 0A       		.uleb128 0xa
 1148 013a 05030000 		.4byte	.LASF24
 1149 013e 04       		.byte	0x4
 1150 013f 34       		.byte	0x34
ARM GAS  C:\Users\victo\AppData\Local\Temp\ccVe2IoV.s 			page 62


 1151 0140 44010000 		.4byte	0x144
 1152 0144 06       		.uleb128 0x6
 1153 0145 04       		.byte	0x4
 1154 0146 A4000000 		.4byte	0xa4
 1155 014a 0A       		.uleb128 0xa
 1156 014b 1B030000 		.4byte	.LASF25
 1157 014f 04       		.byte	0x4
 1158 0150 35       		.byte	0x35
 1159 0151 BA000000 		.4byte	0xba
 1160 0155 0A       		.uleb128 0xa
 1161 0156 AB000000 		.4byte	.LASF26
 1162 015a 04       		.byte	0x4
 1163 015b 36       		.byte	0x36
 1164 015c BA000000 		.4byte	0xba
 1165 0160 0A       		.uleb128 0xa
 1166 0161 06000000 		.4byte	.LASF27
 1167 0165 04       		.byte	0x4
 1168 0166 39       		.byte	0x39
 1169 0167 44010000 		.4byte	0x144
 1170 016b 0A       		.uleb128 0xa
 1171 016c 6B000000 		.4byte	.LASF28
 1172 0170 04       		.byte	0x4
 1173 0171 3A       		.byte	0x3a
 1174 0172 BA000000 		.4byte	0xba
 1175 0176 0A       		.uleb128 0xa
 1176 0177 2D010000 		.4byte	.LASF29
 1177 017b 04       		.byte	0x4
 1178 017c 3B       		.byte	0x3b
 1179 017d BA000000 		.4byte	0xba
 1180 0181 0A       		.uleb128 0xa
 1181 0182 FA000000 		.4byte	.LASF30
 1182 0186 04       		.byte	0x4
 1183 0187 3C       		.byte	0x3c
 1184 0188 BA000000 		.4byte	0xba
 1185 018c 00       		.byte	0
 1186              		.section	.debug_abbrev,"",%progbits
 1187              	.Ldebug_abbrev0:
 1188 0000 01       		.uleb128 0x1
 1189 0001 11       		.uleb128 0x11
 1190 0002 01       		.byte	0x1
 1191 0003 25       		.uleb128 0x25
 1192 0004 0E       		.uleb128 0xe
 1193 0005 13       		.uleb128 0x13
 1194 0006 0B       		.uleb128 0xb
 1195 0007 03       		.uleb128 0x3
 1196 0008 0E       		.uleb128 0xe
 1197 0009 1B       		.uleb128 0x1b
 1198 000a 0E       		.uleb128 0xe
 1199 000b 55       		.uleb128 0x55
 1200 000c 17       		.uleb128 0x17
 1201 000d 11       		.uleb128 0x11
 1202 000e 01       		.uleb128 0x1
 1203 000f 10       		.uleb128 0x10
 1204 0010 17       		.uleb128 0x17
 1205 0011 00       		.byte	0
 1206 0012 00       		.byte	0
 1207 0013 02       		.uleb128 0x2
ARM GAS  C:\Users\victo\AppData\Local\Temp\ccVe2IoV.s 			page 63


 1208 0014 24       		.uleb128 0x24
 1209 0015 00       		.byte	0
 1210 0016 0B       		.uleb128 0xb
 1211 0017 0B       		.uleb128 0xb
 1212 0018 3E       		.uleb128 0x3e
 1213 0019 0B       		.uleb128 0xb
 1214 001a 03       		.uleb128 0x3
 1215 001b 0E       		.uleb128 0xe
 1216 001c 00       		.byte	0
 1217 001d 00       		.byte	0
 1218 001e 03       		.uleb128 0x3
 1219 001f 24       		.uleb128 0x24
 1220 0020 00       		.byte	0
 1221 0021 0B       		.uleb128 0xb
 1222 0022 0B       		.uleb128 0xb
 1223 0023 3E       		.uleb128 0x3e
 1224 0024 0B       		.uleb128 0xb
 1225 0025 03       		.uleb128 0x3
 1226 0026 08       		.uleb128 0x8
 1227 0027 00       		.byte	0
 1228 0028 00       		.byte	0
 1229 0029 04       		.uleb128 0x4
 1230 002a 16       		.uleb128 0x16
 1231 002b 00       		.byte	0
 1232 002c 03       		.uleb128 0x3
 1233 002d 0E       		.uleb128 0xe
 1234 002e 3A       		.uleb128 0x3a
 1235 002f 0B       		.uleb128 0xb
 1236 0030 3B       		.uleb128 0x3b
 1237 0031 05       		.uleb128 0x5
 1238 0032 49       		.uleb128 0x49
 1239 0033 13       		.uleb128 0x13
 1240 0034 00       		.byte	0
 1241 0035 00       		.byte	0
 1242 0036 05       		.uleb128 0x5
 1243 0037 35       		.uleb128 0x35
 1244 0038 00       		.byte	0
 1245 0039 49       		.uleb128 0x49
 1246 003a 13       		.uleb128 0x13
 1247 003b 00       		.byte	0
 1248 003c 00       		.byte	0
 1249 003d 06       		.uleb128 0x6
 1250 003e 0F       		.uleb128 0xf
 1251 003f 00       		.byte	0
 1252 0040 0B       		.uleb128 0xb
 1253 0041 0B       		.uleb128 0xb
 1254 0042 49       		.uleb128 0x49
 1255 0043 13       		.uleb128 0x13
 1256 0044 00       		.byte	0
 1257 0045 00       		.byte	0
 1258 0046 07       		.uleb128 0x7
 1259 0047 15       		.uleb128 0x15
 1260 0048 00       		.byte	0
 1261 0049 27       		.uleb128 0x27
 1262 004a 19       		.uleb128 0x19
 1263 004b 00       		.byte	0
 1264 004c 00       		.byte	0
ARM GAS  C:\Users\victo\AppData\Local\Temp\ccVe2IoV.s 			page 64


 1265 004d 08       		.uleb128 0x8
 1266 004e 2E       		.uleb128 0x2e
 1267 004f 01       		.byte	0x1
 1268 0050 3F       		.uleb128 0x3f
 1269 0051 19       		.uleb128 0x19
 1270 0052 03       		.uleb128 0x3
 1271 0053 0E       		.uleb128 0xe
 1272 0054 3A       		.uleb128 0x3a
 1273 0055 0B       		.uleb128 0xb
 1274 0056 3B       		.uleb128 0x3b
 1275 0057 0B       		.uleb128 0xb
 1276 0058 27       		.uleb128 0x27
 1277 0059 19       		.uleb128 0x19
 1278 005a 11       		.uleb128 0x11
 1279 005b 01       		.uleb128 0x1
 1280 005c 12       		.uleb128 0x12
 1281 005d 06       		.uleb128 0x6
 1282 005e 40       		.uleb128 0x40
 1283 005f 18       		.uleb128 0x18
 1284 0060 9642     		.uleb128 0x2116
 1285 0062 19       		.uleb128 0x19
 1286 0063 01       		.uleb128 0x1
 1287 0064 13       		.uleb128 0x13
 1288 0065 00       		.byte	0
 1289 0066 00       		.byte	0
 1290 0067 09       		.uleb128 0x9
 1291 0068 34       		.uleb128 0x34
 1292 0069 00       		.byte	0
 1293 006a 03       		.uleb128 0x3
 1294 006b 0E       		.uleb128 0xe
 1295 006c 3A       		.uleb128 0x3a
 1296 006d 0B       		.uleb128 0xb
 1297 006e 3B       		.uleb128 0x3b
 1298 006f 0B       		.uleb128 0xb
 1299 0070 49       		.uleb128 0x49
 1300 0071 13       		.uleb128 0x13
 1301 0072 02       		.uleb128 0x2
 1302 0073 17       		.uleb128 0x17
 1303 0074 00       		.byte	0
 1304 0075 00       		.byte	0
 1305 0076 0A       		.uleb128 0xa
 1306 0077 34       		.uleb128 0x34
 1307 0078 00       		.byte	0
 1308 0079 03       		.uleb128 0x3
 1309 007a 0E       		.uleb128 0xe
 1310 007b 3A       		.uleb128 0x3a
 1311 007c 0B       		.uleb128 0xb
 1312 007d 3B       		.uleb128 0x3b
 1313 007e 0B       		.uleb128 0xb
 1314 007f 49       		.uleb128 0x49
 1315 0080 13       		.uleb128 0x13
 1316 0081 3F       		.uleb128 0x3f
 1317 0082 19       		.uleb128 0x19
 1318 0083 3C       		.uleb128 0x3c
 1319 0084 19       		.uleb128 0x19
 1320 0085 00       		.byte	0
 1321 0086 00       		.byte	0
ARM GAS  C:\Users\victo\AppData\Local\Temp\ccVe2IoV.s 			page 65


 1322 0087 00       		.byte	0
 1323              		.section	.debug_loc,"",%progbits
 1324              	.Ldebug_loc0:
 1325              	.LLST0:
 1326 0000 08010000 		.4byte	.LVL17
 1327 0004 14010000 		.4byte	.LVL19
 1328 0008 0100     		.2byte	0x1
 1329 000a 52       		.byte	0x52
 1330 000b 1A010000 		.4byte	.LVL20
 1331 000f 1C010000 		.4byte	.LVL21
 1332 0013 0200     		.2byte	0x2
 1333 0015 38       		.byte	0x38
 1334 0016 9F       		.byte	0x9f
 1335 0017 1E010000 		.4byte	.LVL22
 1336 001b 3C010000 		.4byte	.LVL24
 1337 001f 0100     		.2byte	0x1
 1338 0021 52       		.byte	0x52
 1339 0022 00000000 		.4byte	0
 1340 0026 00000000 		.4byte	0
 1341              	.LLST1:
 1342 002a 00000000 		.4byte	.LVL0
 1343 002e 22000000 		.4byte	.LVL2
 1344 0032 0200     		.2byte	0x2
 1345 0034 30       		.byte	0x30
 1346 0035 9F       		.byte	0x9f
 1347 0036 26000000 		.4byte	.LVL3
 1348 003a 3C000000 		.4byte	.LVL4
 1349 003e 0200     		.2byte	0x2
 1350 0040 30       		.byte	0x30
 1351 0041 9F       		.byte	0x9f
 1352 0042 3C000000 		.4byte	.LVL4
 1353 0046 3E000000 		.4byte	.LVL5
 1354 004a 0200     		.2byte	0x2
 1355 004c 31       		.byte	0x31
 1356 004d 9F       		.byte	0x9f
 1357 004e 3E000000 		.4byte	.LVL5
 1358 0052 48000000 		.4byte	.LVL6
 1359 0056 0100     		.2byte	0x1
 1360 0058 51       		.byte	0x51
 1361 0059 50000000 		.4byte	.LVL7
 1362 005d 52000000 		.4byte	.LVL8
 1363 0061 0200     		.2byte	0x2
 1364 0063 31       		.byte	0x31
 1365 0064 9F       		.byte	0x9f
 1366 0065 52000000 		.4byte	.LVL8
 1367 0069 56000000 		.4byte	.LVL9
 1368 006d 0100     		.2byte	0x1
 1369 006f 51       		.byte	0x51
 1370 0070 6E000000 		.4byte	.LVL10
 1371 0074 82000000 		.4byte	.LVL11
 1372 0078 0100     		.2byte	0x1
 1373 007a 51       		.byte	0x51
 1374 007b 9A000000 		.4byte	.LVL12
 1375 007f AC000000 		.4byte	.LVL13
 1376 0083 0100     		.2byte	0x1
 1377 0085 51       		.byte	0x51
 1378 0086 B8000000 		.4byte	.LVL14
ARM GAS  C:\Users\victo\AppData\Local\Temp\ccVe2IoV.s 			page 66


 1379 008a BC000000 		.4byte	.LVL15
 1380 008e 0200     		.2byte	0x2
 1381 0090 31       		.byte	0x31
 1382 0091 9F       		.byte	0x9f
 1383 0092 BC000000 		.4byte	.LVL15
 1384 0096 12010000 		.4byte	.LVL18
 1385 009a 0100     		.2byte	0x1
 1386 009c 51       		.byte	0x51
 1387 009d 1A010000 		.4byte	.LVL20
 1388 00a1 1C010000 		.4byte	.LVL21
 1389 00a5 0200     		.2byte	0x2
 1390 00a7 31       		.byte	0x31
 1391 00a8 9F       		.byte	0x9f
 1392 00a9 1E010000 		.4byte	.LVL22
 1393 00ad 7C010000 		.4byte	.LVL26
 1394 00b1 0100     		.2byte	0x1
 1395 00b3 51       		.byte	0x51
 1396 00b4 BC010000 		.4byte	.LVL27
 1397 00b8 1A020000 		.4byte	.LVL28
 1398 00bc 0100     		.2byte	0x1
 1399 00be 51       		.byte	0x51
 1400 00bf 1E020000 		.4byte	.LVL29
 1401 00c3 20020000 		.4byte	.LVL30
 1402 00c7 0200     		.2byte	0x2
 1403 00c9 31       		.byte	0x31
 1404 00ca 9F       		.byte	0x9f
 1405 00cb 20020000 		.4byte	.LVL30
 1406 00cf 24020000 		.4byte	.LVL31
 1407 00d3 0100     		.2byte	0x1
 1408 00d5 51       		.byte	0x51
 1409 00d6 6C020000 		.4byte	.LVL32
 1410 00da 6E020000 		.4byte	.LVL33
 1411 00de 0100     		.2byte	0x1
 1412 00e0 51       		.byte	0x51
 1413 00e1 00000000 		.4byte	0
 1414 00e5 00000000 		.4byte	0
 1415              		.section	.debug_aranges,"",%progbits
 1416 0000 1C000000 		.4byte	0x1c
 1417 0004 0200     		.2byte	0x2
 1418 0006 00000000 		.4byte	.Ldebug_info0
 1419 000a 04       		.byte	0x4
 1420 000b 00       		.byte	0
 1421 000c 0000     		.2byte	0
 1422 000e 0000     		.2byte	0
 1423 0010 00000000 		.4byte	.LFB0
 1424 0014 28030000 		.4byte	.LFE0-.LFB0
 1425 0018 00000000 		.4byte	0
 1426 001c 00000000 		.4byte	0
 1427              		.section	.debug_ranges,"",%progbits
 1428              	.Ldebug_ranges0:
 1429 0000 00000000 		.4byte	.LFB0
 1430 0004 28030000 		.4byte	.LFE0
 1431 0008 00000000 		.4byte	0
 1432 000c 00000000 		.4byte	0
 1433              		.section	.debug_line,"",%progbits
 1434              	.Ldebug_line0:
 1435 0000 59010000 		.section	.debug_str,"MS",%progbits,1
ARM GAS  C:\Users\victo\AppData\Local\Temp\ccVe2IoV.s 			page 67


 1435      02008E00 
 1435      00000201 
 1435      FB0E0D00 
 1435      01010101 
 1436              	.LASF15:
 1437 0000 72656733 		.ascii	"reg32\000"
 1437      3200
 1438              	.LASF27:
 1439 0006 4D55585F 		.ascii	"MUX_CTRL_mstrWrBufPtr\000"
 1439      4354524C 
 1439      5F6D7374 
 1439      72577242 
 1439      75665074 
 1440              	.LASF20:
 1441 001c 4D55585F 		.ascii	"MUX_CTRL_customIntrHandler\000"
 1441      4354524C 
 1441      5F637573 
 1441      746F6D49 
 1441      6E747248 
 1442              	.LASF23:
 1443 0037 4D55585F 		.ascii	"MUX_CTRL_mstrControl\000"
 1443      4354524C 
 1443      5F6D7374 
 1443      72436F6E 
 1443      74726F6C 
 1444              	.LASF3:
 1445 004c 73686F72 		.ascii	"short unsigned int\000"
 1445      7420756E 
 1445      7369676E 
 1445      65642069 
 1445      6E7400
 1446              	.LASF19:
 1447 005f 656E6454 		.ascii	"endTransfer\000"
 1447      72616E73 
 1447      66657200 
 1448              	.LASF28:
 1449 006b 4D55585F 		.ascii	"MUX_CTRL_mstrWrBufSize\000"
 1449      4354524C 
 1449      5F6D7374 
 1449      72577242 
 1449      75665369 
 1450              	.LASF12:
 1451 0082 666C6F61 		.ascii	"float\000"
 1451      7400
 1452              	.LASF22:
 1453 0088 4D55585F 		.ascii	"MUX_CTRL_mstrStatus\000"
 1453      4354524C 
 1453      5F6D7374 
 1453      72537461 
 1453      74757300 
 1454              	.LASF21:
 1455 009c 4D55585F 		.ascii	"MUX_CTRL_state\000"
 1455      4354524C 
 1455      5F737461 
 1455      746500
 1456              	.LASF26:
 1457 00ab 4D55585F 		.ascii	"MUX_CTRL_mstrRdBufIndex\000"
ARM GAS  C:\Users\victo\AppData\Local\Temp\ccVe2IoV.s 			page 68


 1457      4354524C 
 1457      5F6D7374 
 1457      72526442 
 1457      7566496E 
 1458              	.LASF5:
 1459 00c3 6C6F6E67 		.ascii	"long unsigned int\000"
 1459      20756E73 
 1459      69676E65 
 1459      6420696E 
 1459      7400
 1460              	.LASF18:
 1461 00d5 64696666 		.ascii	"diffCount\000"
 1461      436F756E 
 1461      7400
 1462              	.LASF9:
 1463 00df 75696E74 		.ascii	"uint8\000"
 1463      3800
 1464              	.LASF1:
 1465 00e5 756E7369 		.ascii	"unsigned char\000"
 1465      676E6564 
 1465      20636861 
 1465      7200
 1466              	.LASF13:
 1467 00f3 646F7562 		.ascii	"double\000"
 1467      6C6500
 1468              	.LASF30:
 1469 00fa 4D55585F 		.ascii	"MUX_CTRL_mstrWrBufIndexTmp\000"
 1469      4354524C 
 1469      5F6D7374 
 1469      72577242 
 1469      7566496E 
 1470              	.LASF10:
 1471 0115 75696E74 		.ascii	"uint16\000"
 1471      313600
 1472              	.LASF34:
 1473 011c 4D55585F 		.ascii	"MUX_CTRL_I2C_ISR\000"
 1473      4354524C 
 1473      5F493243 
 1473      5F495352 
 1473      00
 1474              	.LASF29:
 1475 012d 4D55585F 		.ascii	"MUX_CTRL_mstrWrBufIndex\000"
 1475      4354524C 
 1475      5F6D7374 
 1475      72577242 
 1475      7566496E 
 1476              	.LASF11:
 1477 0145 75696E74 		.ascii	"uint32\000"
 1477      333200
 1478              	.LASF32:
 1479 014c 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\MUX_CTRL_I2C_INT.c\000"
 1479      6E657261 
 1479      7465645F 
 1479      536F7572 
 1479      63655C50 
 1480              	.LASF8:
 1481 0178 756E7369 		.ascii	"unsigned int\000"
ARM GAS  C:\Users\victo\AppData\Local\Temp\ccVe2IoV.s 			page 69


 1481      676E6564 
 1481      20696E74 
 1481      00
 1482              	.LASF7:
 1483 0185 6C6F6E67 		.ascii	"long long unsigned int\000"
 1483      206C6F6E 
 1483      6720756E 
 1483      7369676E 
 1483      65642069 
 1484              	.LASF31:
 1485 019c 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1485      4320342E 
 1485      392E3320 
 1485      32303135 
 1485      30333033 
 1486 01cf 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 1486      20726576 
 1486      6973696F 
 1486      6E203232 
 1486      31323230 
 1487 0202 73202D66 		.ascii	"s -ffunction-sections -finline-functions -flto -ffa"
 1487      66756E63 
 1487      74696F6E 
 1487      2D736563 
 1487      74696F6E 
 1488 0235 742D6C74 		.ascii	"t-lto-objects -fno-strict-aliasing\000"
 1488      6F2D6F62 
 1488      6A656374 
 1488      73202D66 
 1488      6E6F2D73 
 1489              	.LASF16:
 1490 0258 63796973 		.ascii	"cyisraddress\000"
 1490      72616464 
 1490      72657373 
 1490      00
 1491              	.LASF33:
 1492 0265 433A5C55 		.ascii	"C:\\Users\\victo\\OneDrive\\Documents\\PSoC Creator"
 1492      73657273 
 1492      5C766963 
 1492      746F5C4F 
 1492      6E654472 
 1493 0293 5C435950 		.ascii	"\\CYPD4225-40LQXI_0805\\CYPD4225-40LQXI_notebook01."
 1493      44343232 
 1493      352D3430 
 1493      4C515849 
 1493      5F303830 
 1494 02c4 63796473 		.ascii	"cydsn\000"
 1494      6E00
 1495              	.LASF17:
 1496 02ca 73697A65 		.ascii	"sizetype\000"
 1496      74797065 
 1496      00
 1497              	.LASF6:
 1498 02d3 6C6F6E67 		.ascii	"long long int\000"
 1498      206C6F6E 
 1498      6720696E 
 1498      7400
ARM GAS  C:\Users\victo\AppData\Local\Temp\ccVe2IoV.s 			page 70


 1499              	.LASF14:
 1500 02e1 63686172 		.ascii	"char\000"
 1500      00
 1501              	.LASF2:
 1502 02e6 73686F72 		.ascii	"short int\000"
 1502      7420696E 
 1502      7400
 1503              	.LASF4:
 1504 02f0 6C6F6E67 		.ascii	"long int\000"
 1504      20696E74 
 1504      00
 1505              	.LASF0:
 1506 02f9 7369676E 		.ascii	"signed char\000"
 1506      65642063 
 1506      68617200 
 1507              	.LASF24:
 1508 0305 4D55585F 		.ascii	"MUX_CTRL_mstrRdBufPtr\000"
 1508      4354524C 
 1508      5F6D7374 
 1508      72526442 
 1508      75665074 
 1509              	.LASF25:
 1510 031b 4D55585F 		.ascii	"MUX_CTRL_mstrRdBufSize\000"
 1510      4354524C 
 1510      5F6D7374 
 1510      72526442 
 1510      75665369 
 1511              		.comm	__gnu_lto_v1,1,1
 1512              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
